{"pageProps":{"post":{"id":"553879bb-db6e-448d-8adc-68864d7be6cf","date":{"start_date":"2023-02-06"},"type":["Post"],"slug":"disjoint-set","tags":["算法"],"summary":"朴素并查集、带权并查集、种类并查集","title":"并查集汇总","status":["Published"],"createdTime":"Sun Feb 05 2023 04:42:38 GMT+0000 (Coordinated Universal Time)","fullWidth":false,"pageIcon":null,"pageCover":null},"blockMap":{"block":{"553879bb-db6e-448d-8adc-68864d7be6cf":{"value":{"id":"553879bb-db6e-448d-8adc-68864d7be6cf","version":810,"type":"page","properties":{"NX\\Q":[["‣",[["d",{"type":"date","start_date":"2023-02-06"}]]]],"`gQ~":[["Post"]],"d]hq":[["disjoint-set"]],"sD^m":[["算法"]],"wz|S":[["朴素并查集、带权并查集、种类并查集"]],"title":[["并查集汇总"]],"f211bdc0-ee00-4186-9a7d-f68c055ec2ee":[["Published"]]},"content":["665362ab-a08c-4941-aaad-9ba92cd57ea5","743bd369-755b-4811-a44a-68fb3b0a8f1e","e4f3bbce-7fda-49ab-afe7-ab880de46adc","96995af4-4edd-4e66-8bbc-3d0a2d25bf5c","55f5fc80-9f32-4043-a80c-ed24f7b52d93","7c7b72d0-f632-4af9-9ebe-2269462dfa7e","6fbd64de-451a-4faa-8dfd-2196f1986785","bf6c9466-e8ca-4158-8596-5af5de8d18d0","1ad90664-4a08-482c-aa1b-1bfd01a23876","0be73ab4-d5d9-4e9a-af63-2831823aaa81","b0c91971-fc16-429d-be76-889b47aab5e8","8759aefb-d9f0-4686-b1ad-ab66164bc9d3","7013df33-b65b-4efc-bc59-ba1634114206","b6873227-3023-46a0-a74c-c378d9f17a79","dc60ccc1-e981-4843-8138-e79ade727d4d","eb290993-b474-4c95-8133-bf984f6e97ef","5376cc1b-c6f6-4777-8d2e-de5ca0e3e500","5b211aec-572a-4a02-bb03-d26063613253","0b8d355b-9cd0-4933-a8d4-b8576f2265cb","14d5c624-83e8-4328-bb2b-ec7c5ec913b8","6b3c512b-8f16-4687-a2a6-5f635be098e6","2be47971-8f34-4d61-be6b-e52186222b23","dbe6a740-c308-412b-b316-68f1a83ab1b4","d0fdae40-58bf-4091-919b-2cf47ec48eec","fafb083d-4b5d-4c24-999f-1e8b36401ef5","4cc23306-a714-42f6-8095-b46fd43c4de6","813a189d-fdef-4377-ae26-9fee0dc5c5aa","3453bd37-8235-4d6e-9546-d262273c2f2d","12e692f3-341a-4ff8-a5b0-5772cf40fc2d","00ce0b8a-8c07-434a-923e-94bbb1b18d17","907d228d-a46f-46ff-846d-7cb852b234e0","5c8df75c-5e47-490b-bee6-36d3a0b87bb2","e66f4254-048a-445e-8721-53bfc17dc7f5","3213415a-f97a-4e7a-9617-68e328fe6c9b","70e96fad-90c2-42f0-a9da-9cb2c38036ca","91f4b901-6700-4762-811e-a63bb26ec35b","0144989b-b6ee-4558-8cf4-f0e5be7bfe91","09f05433-628f-464a-964e-f366c76a4103","ae650b16-6075-4857-b284-631c85505ee5","f27b8f0c-97d1-4ede-a9e6-6b84d67bd33f","b3cec4c5-000e-484a-8c4f-a8422a6991de","4f97c576-a7c9-4239-b291-87a205470098","6a31c330-a137-4ff7-986f-08c9469e167c","5741c6e4-f7d4-4565-806e-ef6864edc947","2cabc407-c5b7-4edb-afc1-e51458463f56","85cc7b92-cadf-4ef6-99db-9d425effaa55","841a3111-c637-4d0d-839f-37baaeed5dc1","4ec0d426-bb21-4a16-a9a0-d6a5b4286a16","3ddf3fea-1f33-4e20-9cec-c5acd4cfb1e2","0a0845d3-c894-40d7-bc24-8e6240a7232e","912bc2e8-e408-4033-9098-cd3784c37b44","618d8d55-eff6-4ada-aa71-03570bda9634","b9538b9a-6118-488c-b7cc-b7ca69fe7743","7b6da535-136f-47a6-9aec-7b960d9a4f9e","81026ead-852e-4099-994b-00e4788d79a5","65f4474a-8ee6-4fcf-a628-200a5986eda0","091f7d2b-41b2-4cf7-976c-a373a343a0e0","33f23196-f0bb-42af-bab0-232af7c612bb","4cf0d2c1-f77e-4c8b-bb13-371ca56ffba5","3bb6fcc3-857d-4d9a-a618-b3daa115cbec","4d166611-6d7a-4871-8466-84b059c9605d","a7664f0b-bf5d-49ec-aae4-63ad114debe0","d068478b-61b1-4b5c-97cb-07071b160993","4c23debe-1089-43df-92cc-e5bf688b0795","f2906ef8-8cb4-4ba2-bcdf-e5cae358027a","0fbc1110-f37b-4325-9d65-8c5075603ed1","12f8f234-53d3-43e3-99b1-bf182eaad004","691f11ea-11f7-4309-ab25-939306d7871e","8eeed060-fab4-4007-b080-8848ae81d043","883b515d-df29-4456-905c-24277da806d6","8ac47c44-b209-44b4-b9b4-8ab8a193183a","95d30863-e897-4717-ba29-3a2e3d732ae2","e21980d3-57f4-4814-81d0-4a3ff3f65555","832b9e90-f486-4a02-ac54-9538494a892a","64d8a066-268c-43d4-a085-7624ffd9b45a","6c0679be-f8ba-452f-ab75-10d4344ff0a2","1bf31868-4008-41d7-b91c-b408559a2298","d2ee2cb6-4a9d-4077-88b6-089df270870b","81687515-bef0-485b-96ab-9e33922958e5","fdb84352-872c-4e32-85b1-cbccaa3512ff","05298e88-2022-4ac3-b47d-4ae8c22aa29d","545e7c77-6d82-425c-927d-f88e0c397ef6","1617e45a-cb65-4b15-98c1-d6c82b927e8f","90432622-ab42-4af4-aaa2-fd48770b20c0","b0fc6ad4-de5a-4a2e-9ded-ff36467f3659","27f6dfc9-6730-4cfe-8f19-822c64a780a4","328f0f99-98cd-42b5-ac4a-f5cd332fa66f","0b803b74-19bd-4178-b6d3-e5cb9902a079","1a8b46df-2589-4f97-81f3-fd72b292d8fd","974f7ab9-26ed-4659-9131-d4b7fd4847d7","b380f7f7-fee7-4976-915c-ca416e50da3e","e2815dda-2763-42fc-9915-f1f814f0752e","62305182-f351-4311-b019-34681c3524f0","1d567d67-9870-4627-a86d-56507b9f6fc8","5814d0ee-1241-4376-a664-f600c2657c3d","8c08fbdc-f627-4d85-bd0d-7fd97c89d043","be5e096e-c2ee-40c9-9251-5e778fd73f69","0e30ba58-6a40-4e4a-b02f-006f4c4a7621","60e2a569-5d05-4605-8c90-b8faa44b9a64","b8fd920c-3814-40cc-9398-ebec9a991766","6c61980b-f475-43e4-b4b9-6b05fc7a43af","d82da679-3039-491a-b1b5-15372a116f36","8120be68-a971-4082-927c-98b972b45ecb","dabd88d8-5be1-4d19-8fd3-dfa4569f246a","efea4489-810b-41c0-a307-5d181ac2d92a","ec1d6e05-f7da-4e63-ac09-c6bac4f2a0c9","13fe00e8-897d-419c-b5ef-e362468f3603","36db7c54-9849-4c1b-a50c-12789e4b112f","437a0584-19f2-4d3c-b6e4-a14f02291a46","c75d4478-a246-4908-80e6-5fcd641aaeb7","d73a0a13-1ba0-4b1e-9beb-3e6999849cb1","bc26e95d-0933-4dda-a2a7-9ab1c320f88a","d0975a03-c424-4e1a-81a5-b6d171a42165","256aed8f-3621-4ec5-be05-bc67e5529c5d","83cc3b6e-02ea-45d3-8251-84b30b319848","bc3bba95-e537-43c3-9479-f3c46665828b","dadd6171-c23f-4c47-b2c2-b2ed76a7280c","b196fc37-2dfe-417c-9acf-5ba7241c08d7","a64c1481-c5e7-4994-adea-f737317faffe","a44b2439-3511-4220-8ff2-a1560ec93609","3594b93d-c80a-49e3-a151-89fe6af4f641","b5db9287-f8cc-435a-adba-181c8a47e566","f070095c-8ec3-4b28-a2a5-7d5edbf258b6","e03ba5df-13e6-471e-83ed-3ee25793e00f","662c7741-f1d6-4443-b4c1-16ce5c49f963","c7eac456-55aa-463d-b01a-056355e78f2f","3e8cd891-33b9-4337-838f-63ba277b1b4c","91696f2d-8f0a-4702-af8d-5cffd04f1e7b","ed39e1d7-11f8-4744-a161-9243d98033a6","0f6af6f4-5967-408a-8edb-615fa6b814e0","f50a8de5-daba-440a-bb49-ae7ee6ee1128","9775b549-5027-43c8-816c-9bf9e4e00188","5cb0b6af-4f02-4fe8-8e7e-e631a2dd1eab"],"created_time":1675572158248,"last_edited_time":1675669384418,"parent_id":"a3ce75fe-7085-406b-a33f-74958ef7ee13","parent_table":"collection","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"1d21f050-c8c4-41f3-9fd4-8ff7de49c962":{"value":{"id":"1d21f050-c8c4-41f3-9fd4-8ff7de49c962","version":58,"type":"collection_view_page","view_ids":["876cf270-3f6b-4f1a-b6c8-5ffbd27ca40f"],"collection_id":"a3ce75fe-7085-406b-a33f-74958ef7ee13","format":{"block_locked":false,"block_locked_by":"2c0e0b01-f59e-4e03-b7b6-7d706eecada3","collection_pointer":{"id":"a3ce75fe-7085-406b-a33f-74958ef7ee13","table":"collection","spaceId":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"copied_from_pointer":{"id":"866916e3-b939-468b-9b6f-1d47dce99f9c","table":"block","spaceId":"ac4cb96d-c8f8-4040-9bb2-868d9fc7f526"}},"permissions":[{"role":"editor","type":"user_permission","user_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec"},{"role":"reader","type":"public_permission","added_timestamp":1671187403441}],"created_time":1670483100421,"last_edited_time":1693035413780,"parent_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4","parent_table":"space","alive":true,"copied_from":"866916e3-b939-468b-9b6f-1d47dce99f9c","created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"665362ab-a08c-4941-aaad-9ba92cd57ea5":{"value":{"id":"665362ab-a08c-4941-aaad-9ba92cd57ea5","version":4,"type":"table_of_contents","format":{"block_color":"gray"},"created_time":1675572183312,"last_edited_time":1675572183317,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"743bd369-755b-4811-a44a-68fb3b0a8f1e":{"value":{"id":"743bd369-755b-4811-a44a-68fb3b0a8f1e","version":90,"type":"header","properties":{"title":[["用途"]]},"created_time":1675586737265,"last_edited_time":1675586739895,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"e4f3bbce-7fda-49ab-afe7-ab880de46adc":{"value":{"id":"e4f3bbce-7fda-49ab-afe7-ab880de46adc","version":554,"type":"text","properties":{"title":[["并查集一般用于管理元素所属集合，是一种数据结构，一般有两个操作："]]},"created_time":1675586740057,"last_edited_time":1675586839407,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"96995af4-4edd-4e66-8bbc-3d0a2d25bf5c":{"value":{"id":"96995af4-4edd-4e66-8bbc-3d0a2d25bf5c","version":62,"type":"numbered_list","properties":{"title":[["合并两个集合"]]},"created_time":1675586805402,"last_edited_time":1675586808914,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"55f5fc80-9f32-4043-a80c-ed24f7b52d93":{"value":{"id":"55f5fc80-9f32-4043-a80c-ed24f7b52d93","version":112,"type":"numbered_list","properties":{"title":[["判断两个元素是否属于同一集合"]]},"created_time":1675586809057,"last_edited_time":1675586852697,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"7c7b72d0-f632-4af9-9ebe-2269462dfa7e":{"value":{"id":"7c7b72d0-f632-4af9-9ebe-2269462dfa7e","version":53,"type":"header","properties":{"title":[["朴素并查集"]]},"created_time":1675572344650,"last_edited_time":1675591704513,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"6fbd64de-451a-4faa-8dfd-2196f1986785":{"value":{"id":"6fbd64de-451a-4faa-8dfd-2196f1986785","version":266,"type":"text","properties":{"title":[["一般这种并查集是我们最常用的结构，为了区分，我把它成为朴素并查集。"]]},"created_time":1675592239557,"last_edited_time":1675592255458,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"bf6c9466-e8ca-4158-8596-5af5de8d18d0":{"value":{"id":"bf6c9466-e8ca-4158-8596-5af5de8d18d0","version":56,"type":"text","properties":{"title":[["原版",[["b"]]]]},"created_time":1675592257726,"last_edited_time":1675592262340,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"1ad90664-4a08-482c-aa1b-1bfd01a23876":{"value":{"id":"1ad90664-4a08-482c-aa1b-1bfd01a23876","version":255,"type":"text","properties":{"title":[["原版的并查集就是实现了开头介绍的合并、判断两个操作。"]]},"created_time":1675592263371,"last_edited_time":1675592280504,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"0be73ab4-d5d9-4e9a-af63-2831823aaa81":{"value":{"id":"0be73ab4-d5d9-4e9a-af63-2831823aaa81","version":584,"type":"code","properties":{"title":[["int p[N];\n\nvoid init()\n{\n    for (int i = 1; i <= N; i++)\n    {\n        p[i] = i;\n    }\n}\n\n// 找到一个节点的祖先节点\nint find(int a)\n{\n    if (p[a] != a)\n        p[a] = find(p[a]);\n    return p[a];\n}\n\n// 合并两个节点所在的集合\nvoid merge(int a, int b)\n{\n    int x = find(a), y = find(b);\n    p[x] = y;\n}"]],"language":[["C++"]]},"created_time":1675572362405,"last_edited_time":1675591428723,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"b0c91971-fc16-429d-be76-889b47aab5e8":{"value":{"id":"b0c91971-fc16-429d-be76-889b47aab5e8","version":6,"type":"text","properties":{"title":[["维护size的并查集",[["b"]]]]},"created_time":1675572389477,"last_edited_time":1675591438870,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"8759aefb-d9f0-4686-b1ad-ab66164bc9d3":{"value":{"id":"8759aefb-d9f0-4686-b1ad-ab66164bc9d3","version":511,"type":"text","properties":{"title":[["可以使用一个size数组来记录集合存在的元素，合并的时候让元素少的集合往元素多的集合合并。"]]},"created_time":1675591439270,"last_edited_time":1675592288746,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"7013df33-b65b-4efc-bc59-ba1634114206":{"value":{"id":"7013df33-b65b-4efc-bc59-ba1634114206","version":5,"type":"text","properties":{"title":[["这种合并方式也被称为启发式合并。"]]},"created_time":1675592288743,"last_edited_time":1675592288746,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"b6873227-3023-46a0-a74c-c378d9f17a79":{"value":{"id":"b6873227-3023-46a0-a74c-c378d9f17a79","version":177,"type":"text","properties":{"title":[["相比于原版的合并，效率会高一些。"]]},"created_time":1675592289479,"last_edited_time":1675592300847,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"dc60ccc1-e981-4843-8138-e79ade727d4d":{"value":{"id":"dc60ccc1-e981-4843-8138-e79ade727d4d","version":181,"type":"code","properties":{"title":[["// p[]存储每个点的祖宗节点, size[]只有祖宗节点的有意义，表示祖宗节点所在集合中的点的数量\nint p[N], size[N], n;\n\n// 返回x的祖宗节点\nint find(int x)\n{\n    if (p[x] != x)\n        p[x] = find(p[x]);\n    return p[x];\n}\n\n// 初始化，假定节点编号是1~n\nvoid init()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        p[i] = i;\n        size[i] = 1;\n    }\n}\n\n// 启发式合并\nvoid merge(int a, int b)\n{\n    int x = find(a), y = find(b);\n    if (x == y)\n        return;\n    if (size[y] < size[x])\n        swap(x, y);\n    p[x] = y;\n    size[y] += size[x];\n}"]],"language":[["C++"]]},"created_time":1675573177250,"last_edited_time":1675592234160,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"eb290993-b474-4c95-8133-bf984f6e97ef":{"value":{"id":"eb290993-b474-4c95-8133-bf984f6e97ef","version":57,"type":"text","created_time":1675593129978,"last_edited_time":1675602175556,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"5376cc1b-c6f6-4777-8d2e-de5ca0e3e500":{"value":{"id":"5376cc1b-c6f6-4777-8d2e-de5ca0e3e500","version":9,"type":"header","properties":{"title":[["带权并查集"]]},"created_time":1675586884926,"last_edited_time":1675593146813,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"5b211aec-572a-4a02-bb03-d26063613253":{"value":{"id":"5b211aec-572a-4a02-bb03-d26063613253","version":212,"type":"text","properties":{"title":[["维护到祖先节点距离的并查集",[["b"]]]]},"created_time":1675572399330,"last_edited_time":1675593156821,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"0b8d355b-9cd0-4933-a8d4-b8576f2265cb":{"value":{"id":"0b8d355b-9cd0-4933-a8d4-b8576f2265cb","version":665,"type":"code","properties":{"title":[["const int N = 1e5;\n\nint p[N], d[N];\n// p[]存储每个点的祖宗节点, d[x]存储x到p[x]的距离\n\n// 返回x的祖宗节点\nint find(int x)\n{\n    if (p[x] != x)\n    {\n        int u = find(p[x]);\n        d[x] += d[p[x]];\n        p[x] = u;\n    }\n    return p[x];\n}\n\n// 版本2\nint find(int x)\n{\n\t\tif (p[x] != x)\n\t\t{\n\t\t\t\tint u = p[x];\n\t\t\t\tp[x] = find(p[x]);\n\t\t\t\td[x] += d[u];\n\t\t}\n\t\treturn p[x];\n}\n\n// 初始化，假定节点编号是1~n\nvoid init()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        p[i] = i;\n        d[i] = 0;\n    }\n}\n\n// 合并a和b所在的两个集合：\nvoid merge(int a, int b)\n{\n\t\tint px = find(a), py = find(b);\n    p[px] = py;\n    d[px] = distance; // 根据具体问题，初始化find(a)的偏移量\n}"]],"language":[["C++"]]},"created_time":1675573396856,"last_edited_time":1675599153714,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"14d5c624-83e8-4328-bb2b-ec7c5ec913b8":{"value":{"id":"14d5c624-83e8-4328-bb2b-ec7c5ec913b8","version":360,"type":"sub_header","properties":{"title":[["带权的合并操作"]]},"created_time":1675593110181,"last_edited_time":1675595519477,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"6b3c512b-8f16-4687-a2a6-5f635be098e6":{"value":{"id":"6b3c512b-8f16-4687-a2a6-5f635be098e6","version":492,"type":"text","properties":{"title":[["我们看一个具体的例子，假设有x和y两个节点，他们的距离是w，而px和py分别是两个节点的祖先节点，它们到祖先的距离分别是d[x]和d[y]。"]]},"created_time":1675595519661,"last_edited_time":1675595699734,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"2be47971-8f34-4d61-be6b-e52186222b23":{"value":{"id":"2be47971-8f34-4d61-be6b-e52186222b23","version":11,"type":"image","properties":{"size":[["60.2KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e2ea857c-e35e-4e95-80e7-134da4810a4f/Untitled.png"]]},"format":{"block_width":632,"block_height":652,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e2ea857c-e35e-4e95-80e7-134da4810a4f/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":1.0316455696202531,"block_preserve_scale":true},"created_time":1675595518266,"last_edited_time":1675595521857,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"file_ids":["e2ea857c-e35e-4e95-80e7-134da4810a4f"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"dbe6a740-c308-412b-b316-68f1a83ab1b4":{"value":{"id":"dbe6a740-c308-412b-b316-68f1a83ab1b4","version":322,"type":"text","properties":{"title":[["现在想要合并px到py，问题是我们怎么设置px和py的距离？"]]},"created_time":1675595561316,"last_edited_time":1675595664789,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"d0fdae40-58bf-4091-919b-2cf47ec48eec":{"value":{"id":"d0fdae40-58bf-4091-919b-2cf47ec48eec","version":645,"type":"text","properties":{"title":[["经过观察后发现，合并后x→px→py和x→y→py的距离应该相同，如果不相同就矛盾，因此可以得到"],["d[px] =  w + d[y] - d[x]",[["c"]]],["，这是一般情况下权值的计算方式。"]]},"created_time":1675595589137,"last_edited_time":1675595671904,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"fafb083d-4b5d-4c24-999f-1e8b36401ef5":{"value":{"id":"fafb083d-4b5d-4c24-999f-1e8b36401ef5","version":331,"type":"text","properties":{"title":[["在实际题目中，可以根据题目的描述来修改合并方式。"]]},"created_time":1675595672251,"last_edited_time":1675595705281,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"4cc23306-a714-42f6-8095-b46fd43c4de6":{"value":{"id":"4cc23306-a714-42f6-8095-b46fd43c4de6","version":4,"type":"sub_header","properties":{"title":[["find函数"]]},"created_time":1675591799119,"last_edited_time":1675595642638,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"813a189d-fdef-4377-ae26-9fee0dc5c5aa":{"value":{"id":"813a189d-fdef-4377-ae26-9fee0dc5c5aa","version":6,"type":"text","properties":{"title":[["需要注意的是这里的find函数，一开始"],["d[x]",[["c"]]],["实际上表示的是当前节点离"],["p[x]",[["c"]]],["的距离，而当进行路径压缩后，"],["p[x]",[["c"]]],[" 就是这个集合的祖先节点，那么"],["d[x]",[["c"]]],[" 的含义就变为了当前节点到祖先节点的距离。所以我们必须先进行路径压缩，才能更新"],["d[x]",[["c"]]]]},"created_time":1675591799119,"last_edited_time":1675593095939,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"3453bd37-8235-4d6e-9546-d262273c2f2d":{"value":{"id":"3453bd37-8235-4d6e-9546-d262273c2f2d","version":242,"type":"code","properties":{"title":[["// 返回x的祖宗节点\nint find(int x)\n{\n    if (p[x] != x)\n    {\n\t\t\t\t// 寻找祖先节点\n        int u = find(p[x]);\n        d[x] += d[p[x]]; // 更新到祖先节点的距离\n        p[x] = u; // 修改为祖先节点\n    }\n    return p[x];\n}"]],"language":[["C++"]]},"created_time":1675591830153,"last_edited_time":1675591875333,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"12e692f3-341a-4ff8-a5b0-5772cf40fc2d":{"value":{"id":"12e692f3-341a-4ff8-a5b0-5772cf40fc2d","version":21,"type":"image","properties":{"size":[["95.9KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/28e39de8-cdfa-4268-9101-52b9b8da85fb/Untitled.png"]]},"format":{"block_width":1386,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/28e39de8-cdfa-4268-9101-52b9b8da85fb/Untitled.png","block_full_width":false,"block_page_width":true,"block_aspect_ratio":0.4906204906204906,"copied_from_pointer":{"id":"d20bedcd-8e6e-4409-bf0a-2cd2e0fc53e4","table":"block","spaceId":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"block_preserve_scale":true},"created_time":1675592198018,"last_edited_time":1675592380219,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"copied_from":"d20bedcd-8e6e-4409-bf0a-2cd2e0fc53e4","file_ids":["28e39de8-cdfa-4268-9101-52b9b8da85fb"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"00ce0b8a-8c07-434a-923e-94bbb1b18d17":{"value":{"id":"00ce0b8a-8c07-434a-923e-94bbb1b18d17","version":4,"type":"text","properties":{"title":[["如果先更新"],["d[x]",[["c"]]],["，再进行压缩，那么就会得到错误的数据："]]},"created_time":1675591799119,"last_edited_time":1675592196715,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"907d228d-a46f-46ff-846d-7cb852b234e0":{"value":{"id":"907d228d-a46f-46ff-846d-7cb852b234e0","version":53,"type":"code","properties":{"title":[["int find(int x)\n{\n    if (p[x] != x)\n    {\n        d[x] += d[p[x]]; // 没有经过路径压缩的 d[p[x]]，只是父节点到其父节点的距离\n        p[x] = find(p[x]); \n    }\n    return p[x];\n}"]],"language":[["C++"]]},"created_time":1675592080922,"last_edited_time":1675592101550,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"5c8df75c-5e47-490b-bee6-36d3a0b87bb2":{"value":{"id":"5c8df75c-5e47-490b-bee6-36d3a0b87bb2","version":118,"type":"text","properties":{"title":[["这样写就不能正确更新了。"]]},"created_time":1675592107145,"last_edited_time":1675592512705,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"e66f4254-048a-445e-8721-53bfc17dc7f5":{"value":{"id":"e66f4254-048a-445e-8721-53bfc17dc7f5","version":12,"type":"image","properties":{"size":[["89.3KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/27db6022-e584-4dbe-8cf8-06cc84109e28/Untitled.png"]]},"format":{"block_width":1072,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/27db6022-e584-4dbe-8cf8-06cc84109e28/Untitled.png","block_full_width":false,"block_page_width":true,"block_aspect_ratio":0.7350746268656716,"copied_from_pointer":{"id":"c0baacdc-4a39-4b01-9c92-df3416bf78e4","table":"block","spaceId":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"block_preserve_scale":true},"created_time":1675592123323,"last_edited_time":1675592380219,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"copied_from":"c0baacdc-4a39-4b01-9c92-df3416bf78e4","file_ids":["27db6022-e584-4dbe-8cf8-06cc84109e28"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"3213415a-f97a-4e7a-9617-68e328fe6c9b":{"value":{"id":"3213415a-f97a-4e7a-9617-68e328fe6c9b","version":15,"type":"header","properties":{"title":[["种类并查集"]]},"created_time":1675586888248,"last_edited_time":1675596584197,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"70e96fad-90c2-42f0-a9da-9cb2c38036ca":{"value":{"id":"70e96fad-90c2-42f0-a9da-9cb2c38036ca","version":649,"type":"text","properties":{"title":[["上面我们介绍的并查集，维护的信息都是具有连通性、传递性的，比如说朋友的朋友是朋友。但有时候题目要求我们维护敌人的敌人是朋友这种关系，种类并查集就是为了解决这个问题而诞生的。"]]},"created_time":1675596572533,"last_edited_time":1675596927073,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"91f4b901-6700-4762-811e-a63bb26ec35b":{"value":{"id":"91f4b901-6700-4762-811e-a63bb26ec35b","version":811,"type":"text","properties":{"title":[["假设需要总元素个数是n，题目需要将维护朋友和敌人两种关系，那么我们就开2n的空间，这里假设n=4。"]]},"created_time":1675596770642,"last_edited_time":1675597010604,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"0144989b-b6ee-4558-8cf4-f0e5be7bfe91":{"value":{"id":"0144989b-b6ee-4558-8cf4-f0e5be7bfe91","version":11,"type":"image","properties":{"size":[["3.9KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3bfbcc56-e3fb-4ced-b2b1-1d2b28c06d68/Untitled.png"]]},"format":{"block_width":492,"block_height":78,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3bfbcc56-e3fb-4ced-b2b1-1d2b28c06d68/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":0.15853658536585366,"block_preserve_scale":true},"created_time":1675596906427,"last_edited_time":1675596910017,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"file_ids":["3bfbcc56-e3fb-4ced-b2b1-1d2b28c06d68"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"09f05433-628f-464a-964e-f366c76a4103":{"value":{"id":"09f05433-628f-464a-964e-f366c76a4103","version":113,"type":"text","properties":{"title":[["我们用1~4维护"],["朋友",[["b"]]],["关系（比如说关在同一个监狱的狱友），用5~8维护"],["敌人",[["b"]]],["关系（比如说关在不同监狱的仇人）。现在假如我们得到信息：1和2是敌人，应该怎么办？"]]},"created_time":1675586884926,"last_edited_time":1675596984896,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"ae650b16-6075-4857-b284-631c85505ee5":{"value":{"id":"ae650b16-6075-4857-b284-631c85505ee5","version":19,"type":"text","properties":{"title":[["我们"],["merge(1, 2+n), merge(1+n, 2);",[["c"]]],["。这里的意思就是：1是2的敌人，2是1的敌人"]]},"created_time":1675597013329,"last_edited_time":1675597520412,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"f27b8f0c-97d1-4ede-a9e6-6b84d67bd33f":{"value":{"id":"f27b8f0c-97d1-4ede-a9e6-6b84d67bd33f","version":12,"type":"image","properties":{"size":[["6.2KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/66470aa1-ca10-4971-9c27-583323d07a39/Untitled.png"]]},"format":{"block_width":492,"block_height":110,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/66470aa1-ca10-4971-9c27-583323d07a39/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":0.22357723577235772,"block_preserve_scale":true},"created_time":1675597488917,"last_edited_time":1675597492144,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"file_ids":["66470aa1-ca10-4971-9c27-583323d07a39"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"b3cec4c5-000e-484a-8c4f-a8422a6991de":{"value":{"id":"b3cec4c5-000e-484a-8c4f-a8422a6991de","version":149,"type":"text","properties":{"title":[["假设2和4又是敌人，我们同样"],["merge(2, 4+n), merge(2+n, 4)",[["c"]]]]},"created_time":1675597482001,"last_edited_time":1675597519124,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"4f97c576-a7c9-4239-b291-87a205470098":{"value":{"id":"4f97c576-a7c9-4239-b291-87a205470098","version":12,"type":"image","properties":{"size":[["9.2KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/590a4762-9e66-4cf0-887d-57bce3af9861/Untitled.png"]]},"format":{"block_width":492,"block_height":138,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/590a4762-9e66-4cf0-887d-57bce3af9861/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":0.2804878048780488,"block_preserve_scale":true},"created_time":1675597526506,"last_edited_time":1675597530203,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"file_ids":["590a4762-9e66-4cf0-887d-57bce3af9861"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"6a31c330-a137-4ff7-986f-08c9469e167c":{"value":{"id":"6a31c330-a137-4ff7-986f-08c9469e167c","version":474,"type":"text","properties":{"title":[["由于敌人的敌人是朋友，我们可以得出1和4是朋友。当我们查询1和4是否属于同一集合的时候，得到的结果是true。"]]},"created_time":1675597528901,"last_edited_time":1675597577359,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"5741c6e4-f7d4-4565-806e-ef6864edc947":{"value":{"id":"5741c6e4-f7d4-4565-806e-ef6864edc947","version":138,"type":"text","properties":{"title":[["通过上面的例子我们可以总结一般性规律："]]},"created_time":1675597577678,"last_edited_time":1675664257448,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"2cabc407-c5b7-4edb-afc1-e51458463f56":{"value":{"id":"2cabc407-c5b7-4edb-afc1-e51458463f56","version":250,"type":"bulleted_list","properties":{"title":[["题目有"],["n",[["c"]]],["个元素，有"],["m",[["c"]]],["种类别，则我们需要开"],["n * m",[["c"]]],["的空间"]]},"created_time":1675664257620,"last_edited_time":1675664308896,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"85cc7b92-cadf-4ef6-99db-9d425effaa55":{"value":{"id":"85cc7b92-cadf-4ef6-99db-9d425effaa55","version":269,"type":"bulleted_list","properties":{"title":[["1*n, 2*n, 3*n, …, m*n",[["c"]]],[" 分别代表不同的类别"]]},"created_time":1675664286576,"last_edited_time":1675664322352,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"841a3111-c637-4d0d-839f-37baaeed5dc1":{"value":{"id":"841a3111-c637-4d0d-839f-37baaeed5dc1","version":228,"type":"bulleted_list","properties":{"title":[["通过链接不同类别的节点，可以描述某种关系。"]]},"created_time":1675664323912,"last_edited_time":1675668671016,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"4ec0d426-bb21-4a16-a9a0-d6a5b4286a16":{"value":{"id":"4ec0d426-bb21-4a16-a9a0-d6a5b4286a16","version":9,"type":"text","created_time":1675668671225,"last_edited_time":1675668671944,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"3ddf3fea-1f33-4e20-9cec-c5acd4cfb1e2":{"value":{"id":"3ddf3fea-1f33-4e20-9cec-c5acd4cfb1e2","version":34,"type":"header","properties":{"title":[["复杂度"]]},"created_time":1675668671225,"last_edited_time":1675668674386,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"0a0845d3-c894-40d7-bc24-8e6240a7232e":{"value":{"id":"0a0845d3-c894-40d7-bc24-8e6240a7232e","version":105,"type":"text","properties":{"title":[["复杂度的详细讨论请看："],["并查集 - OI Wiki (oi-wiki.org)",[["a","https://oi-wiki.org/ds/dsu/#%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6"]]]]},"created_time":1675668674529,"last_edited_time":1675668686751,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"912bc2e8-e408-4033-9098-cd3784c37b44":{"value":{"id":"912bc2e8-e408-4033-9098-cd3784c37b44","version":312,"type":"text","properties":{"title":[["默认情况下，我们可以认为并查集的每个操作时间复杂度都是很小的常数，近似"],["⁍",[["e","O(1)"]]]]},"created_time":1675668687703,"last_edited_time":1675668734488,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"618d8d55-eff6-4ada-aa71-03570bda9634":{"value":{"id":"618d8d55-eff6-4ada-aa71-03570bda9634","version":60,"type":"text","properties":{"title":[["空间复杂度是"],["⁍",[["e","O(n)"]]]]},"created_time":1675668721317,"last_edited_time":1675668729768,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"b9538b9a-6118-488c-b7cc-b7ca69fe7743":{"value":{"id":"b9538b9a-6118-488c-b7cc-b7ca69fe7743","version":4,"type":"header","properties":{"title":[["练习题"]]},"created_time":1675586884926,"last_edited_time":1675597528901,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"7b6da535-136f-47a6-9aec-7b960d9a4f9e":{"value":{"id":"7b6da535-136f-47a6-9aec-7b960d9a4f9e","version":24,"type":"text","properties":{"title":[["下面我们看一些经典的并查集题目，来了解并查集的应用："]]},"format":{"copied_from_pointer":{"id":"5e62cf05-5f41-41e2-b604-c136163dfa34","table":"block","spaceId":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"}},"created_time":1675592466392,"last_edited_time":1675592478417,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"copied_from":"5e62cf05-5f41-41e2-b604-c136163dfa34","created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"81026ead-852e-4099-994b-00e4788d79a5":{"value":{"id":"81026ead-852e-4099-994b-00e4788d79a5","version":72,"type":"sub_header","properties":{"title":[["银河英雄传说"]]},"created_time":1675649712908,"last_edited_time":1675649717470,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"65f4474a-8ee6-4fcf-a628-200a5986eda0":{"value":{"id":"65f4474a-8ee6-4fcf-a628-200a5986eda0","version":16,"type":"text","properties":{"title":[["238. 银河英雄传说 - AcWing题库",[["a","https://www.acwing.com/problem/content/description/240/"]]]]},"created_time":1675649709886,"last_edited_time":1675649711366,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"091f7d2b-41b2-4cf7-976c-a373a343a0e0":{"value":{"id":"091f7d2b-41b2-4cf7-976c-a373a343a0e0","version":70,"type":"text","properties":{"title":[["题目大意："]]},"format":{"copied_from_pointer":{"id":"a49a012c-78a9-4b41-9aec-af51bc043fea","table":"block","spaceId":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"}},"created_time":1675592466393,"last_edited_time":1675649794897,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"copied_from":"a49a012c-78a9-4b41-9aec-af51bc043fea","created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"33f23196-f0bb-42af-bab0-232af7c612bb":{"value":{"id":"33f23196-f0bb-42af-bab0-232af7c612bb","version":150,"type":"text","properties":{"title":[["N个飞船分布在N列，给定两种操作："]]},"created_time":1675649795147,"last_edited_time":1675649807487,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"4cf0d2c1-f77e-4c8b-bb13-371ca56ffba5":{"value":{"id":"4cf0d2c1-f77e-4c8b-bb13-371ca56ffba5","version":266,"type":"text","properties":{"title":[["M i j",[["c"]]],[" 将第i列的飞船保持原有顺序，接在第j列的"],["尾部",[["b"]]]]},"created_time":1675649807964,"last_edited_time":1675650291929,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"3bb6fcc3-857d-4d9a-a618-b3daa115cbec":{"value":{"id":"3bb6fcc3-857d-4d9a-a618-b3daa115cbec","version":420,"type":"text","properties":{"title":[["C i j",[["c"]]],[" 询问第i号战舰与第j号战舰是否处于同一列，如果同一列，输出它们所隔的战舰。"]]},"created_time":1675649829483,"last_edited_time":1675649868563,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"4d166611-6d7a-4871-8466-84b059c9605d":{"value":{"id":"4d166611-6d7a-4871-8466-84b059c9605d","version":246,"type":"text","properties":{"title":[["可以看到题目有很强的集合特征，用并查集来做最合适了"]]},"created_time":1675649868748,"last_edited_time":1675649885510,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"a7664f0b-bf5d-49ec-aae4-63ad114debe0":{"value":{"id":"a7664f0b-bf5d-49ec-aae4-63ad114debe0","version":627,"type":"text","properties":{"title":[["对于"],["M",[["c"]]],["操作，我们执行合并，对于"],["C",[["c"]]],["操作，我们查询"],["i",[["c"]]],["和"],["j",[["c"]]],["是否是同一个集合，如果不是输出-1，否则输出"],["abs(d[i] - d[j]) - 1",[["c"]]],["，其中"],["d[i]",[["c"]]],["表示"],["i",[["c"]]],["节点到祖先节点的距离"]]},"created_time":1675649885623,"last_edited_time":1675650068583,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"d068478b-61b1-4b5c-97cb-07071b160993":{"value":{"id":"d068478b-61b1-4b5c-97cb-07071b160993","version":479,"type":"text","properties":{"title":[["初始化时，将"],["d[i]",[["c"]]],["初始化为1，在我们执行合并的时候，假设要执行"],["M 3 2",[["c"]]],["，当前状态如图："]]},"created_time":1675650069657,"last_edited_time":1675650616523,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"4c23debe-1089-43df-92cc-e5bf688b0795":{"value":{"id":"4c23debe-1089-43df-92cc-e5bf688b0795","version":12,"type":"image","properties":{"size":[["197.7KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7351ebc1-cfc8-4151-ba15-364261d1b233/Untitled.png"]]},"format":{"block_width":678,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7351ebc1-cfc8-4151-ba15-364261d1b233/Untitled.png","block_full_width":false,"block_page_width":true,"block_aspect_ratio":1.3156342182890854,"block_preserve_scale":true},"created_time":1675650232455,"last_edited_time":1675650236868,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"file_ids":["7351ebc1-cfc8-4151-ba15-364261d1b233"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"f2906ef8-8cb4-4ba2-bcdf-e5cae358027a":{"value":{"id":"f2906ef8-8cb4-4ba2-bcdf-e5cae358027a","version":230,"type":"text","properties":{"title":[["那么"],["3→2",[["c"]]],["这条边，值应该是多少呢？"]]},"created_time":1675650175910,"last_edited_time":1675650331839,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"0fbc1110-f37b-4325-9d65-8c5075603ed1":{"value":{"id":"0fbc1110-f37b-4325-9d65-8c5075603ed1","version":604,"type":"text","properties":{"title":[["考虑合并后，"],["3",[["c"]]],["和"],["6",[["c"]]],["的祖先节点均变为"],["4",[["c"]]],["，而M操作要求我们把节点接在目标集合的"],["尾部",[["b"]]],["，那么"],["3→2",[["c"]]],["的权值应该更新为4，同样地，6→3的权值应该加上4。"]]},"created_time":1675650235673,"last_edited_time":1675650348063,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"12f8f234-53d3-43e3-99b1-bf182eaad004":{"value":{"id":"12f8f234-53d3-43e3-99b1-bf182eaad004","version":552,"type":"text","properties":{"title":[["我们把结论变得更具有概括性：执行"],["M i j",[["c"]]],["操作时，属于"],["i",[["c"]]],["集合的节点的权值，应该加上"],["j",[["c"]]],["集合的元素个数"],["s[j]",[["c"]]],["。"]]},"created_time":1675650348278,"last_edited_time":1675650529448,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"691f11ea-11f7-4309-ab25-939306d7871e":{"value":{"id":"691f11ea-11f7-4309-ab25-939306d7871e","version":14,"type":"image","properties":{"size":[["51.6KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e3e91a81-2871-4d11-a1b8-65d6a3fcb4b5/Untitled.png"]]},"format":{"block_width":432,"block_height":830,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e3e91a81-2871-4d11-a1b8-65d6a3fcb4b5/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":1.2928348909657321,"block_preserve_scale":true},"created_time":1675650455081,"last_edited_time":1675650506672,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"file_ids":["e3e91a81-2871-4d11-a1b8-65d6a3fcb4b5"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"8eeed060-fab4-4007-b080-8848ae81d043":{"value":{"id":"8eeed060-fab4-4007-b080-8848ae81d043","version":735,"type":"text","properties":{"title":[["现在问题是怎么给"],["i",[["c"]]],["集合的所有权值加上"],["s[j]",[["c"]]],[" 呢？我们需要找出所有属于"],["i",[["c"]]],["集合节点的元素然后添加"],["s[j]",[["c"]]],["吗？实际上并查集的路径压缩能很方便的实现这个操作。"]]},"created_time":1675650508404,"last_edited_time":1675650584208,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"883b515d-df29-4456-905c-24277da806d6":{"value":{"id":"883b515d-df29-4456-905c-24277da806d6","version":647,"type":"text","properties":{"title":[["还是上面的例子，一开始"],["d[3] = 0",[["c"]]],[" 当我们执行"],["M 3 2",[["c"]]],[" 的时候，会设置"],["d[3] = s[4]",[["c"]]],[" 。只需要执行这步操作后，再将来find的时候，由于路径压缩的原因："]]},"created_time":1675650584356,"last_edited_time":1675650814123,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"8ac47c44-b209-44b4-b9b4-8ab8a193183a":{"value":{"id":"8ac47c44-b209-44b4-b9b4-8ab8a193183a","version":714,"type":"code","properties":{"title":[["int find(int x)\n{\n\t\tif (x != p[x])\n\t\t{\n\t\t\t\tint u = find(p[x]);\n\t\t\t\td[x] += d[p[x]]; // 路径压缩，更新d[x]\n\t\t\t\tp[x] = u;\n\t\t}\n\t\treturn p[x];\n}"]],"language":[["C++"]]},"created_time":1675650655764,"last_edited_time":1675650798342,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"95d30863-e897-4717-ba29-3a2e3d732ae2":{"value":{"id":"95d30863-e897-4717-ba29-3a2e3d732ae2","version":726,"type":"text","properties":{"title":[["当我们"],["find(6)",[["c"]]],[" 的时候，其中"],["d[x] += d[p[x]]",[["c"]]],[" 这步操作，会把先前更新的"],["d[3]",[["c"]]],["累加到"],["d[6]",[["c"]]],[" 上。从而保证了从6出发，到祖先节点的"],["d",[["c"]]],["都能被正确更新。"]]},"created_time":1675650508404,"last_edited_time":1675650908606,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"e21980d3-57f4-4814-81d0-4a3ff3f65555":{"value":{"id":"e21980d3-57f4-4814-81d0-4a3ff3f65555","version":332,"type":"text","properties":{"title":[["总而言之我们只需要修改"],["i",[["c"]]],["集合祖先节点的"],["d",[["c"]]],["，后续就能通过"],["find",[["c"]]],["操作来更新集合中所有节点的"],["d",[["c"]]],["。"]]},"created_time":1675650910026,"last_edited_time":1675650947910,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"832b9e90-f486-4a02-ac54-9538494a892a":{"value":{"id":"832b9e90-f486-4a02-ac54-9538494a892a","version":286,"type":"text","properties":{"title":[["下面我们就可以根据分析内容和带权并查集的模板写出代码了："]]},"created_time":1675650948490,"last_edited_time":1675651049588,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"64d8a066-268c-43d4-a085-7624ffd9b45a":{"value":{"id":"64d8a066-268c-43d4-a085-7624ffd9b45a","version":30,"type":"toggle","properties":{"title":[["答案"]]},"content":["f8fd91b1-d9b3-4687-8b20-eeb7096d66a9"],"created_time":1675651500970,"last_edited_time":1675651511876,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"6c0679be-f8ba-452f-ab75-10d4344ff0a2":{"value":{"id":"6c0679be-f8ba-452f-ab75-10d4344ff0a2","version":5,"type":"text","created_time":1675650946884,"last_edited_time":1675650946887,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"1bf31868-4008-41d7-b91c-b408559a2298":{"value":{"id":"1bf31868-4008-41d7-b91c-b408559a2298","version":8,"type":"sub_header","properties":{"title":[["食物链"]]},"format":{"copied_from_pointer":{"id":"a49a012c-78a9-4b41-9aec-af51bc043fea","table":"block","spaceId":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"}},"created_time":1675592466393,"last_edited_time":1675650938857,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"copied_from":"a49a012c-78a9-4b41-9aec-af51bc043fea","created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"d2ee2cb6-4a9d-4077-88b6-089df270870b":{"value":{"id":"d2ee2cb6-4a9d-4077-88b6-089df270870b","version":6,"type":"text","properties":{"title":[["240. 食物链 - AcWing题库",[["a","https://www.acwing.com/problem/content/242/"]]]]},"format":{"copied_from_pointer":{"id":"a49a012c-78a9-4b41-9aec-af51bc043fea","table":"block","spaceId":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"}},"created_time":1675592466393,"last_edited_time":1675652140173,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"copied_from":"a49a012c-78a9-4b41-9aec-af51bc043fea","created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"81687515-bef0-485b-96ab-9e33922958e5":{"value":{"id":"81687515-bef0-485b-96ab-9e33922958e5","version":87,"type":"text","properties":{"title":[["带权并查集",[["b"]]]]},"created_time":1675652140398,"last_edited_time":1675652200038,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"fdb84352-872c-4e32-85b1-cbccaa3512ff":{"value":{"id":"fdb84352-872c-4e32-85b1-cbccaa3512ff","version":462,"type":"text","properties":{"title":[["这道题可以用带权并查集做，我们假设此时的权值"],["d[i]",[["c"]]],["的含义是当前节点"],["i",[["c"]]],["和祖先节点的关系。"]]},"created_time":1675652200677,"last_edited_time":1675653064364,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"05298e88-2022-4ac3-b47d-4ae8c22aa29d":{"value":{"id":"05298e88-2022-4ac3-b47d-4ae8c22aa29d","version":603,"type":"text","properties":{"title":[["根据题目的定义，无非是三种关系：同类、吃、被吃，我们用0，1，2分别来表示这三种关系："]]},"created_time":1675652619913,"last_edited_time":1675653084419,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"545e7c77-6d82-425c-927d-f88e0c397ef6":{"value":{"id":"545e7c77-6d82-425c-927d-f88e0c397ef6","version":103,"type":"bulleted_list","properties":{"title":[["d[i] = 0 → 和根节点同类"]]},"created_time":1675653084700,"last_edited_time":1675653093890,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"1617e45a-cb65-4b15-98c1-d6c82b927e8f":{"value":{"id":"1617e45a-cb65-4b15-98c1-d6c82b927e8f","version":149,"type":"bulleted_list","properties":{"title":[["d[i] = 1 → 吃根节点"]]},"created_time":1675653094505,"last_edited_time":1675653105496,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"90432622-ab42-4af4-aaa2-fd48770b20c0":{"value":{"id":"90432622-ab42-4af4-aaa2-fd48770b20c0","version":134,"type":"bulleted_list","properties":{"title":[["d[i] = 2 → 被根节点吃"]]},"created_time":1675653105685,"last_edited_time":1675653795336,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"b0fc6ad4-de5a-4a2e-9ded-ff36467f3659":{"value":{"id":"b0fc6ad4-de5a-4a2e-9ded-ff36467f3659","version":1043,"type":"text","properties":{"title":[["举一个例子，下面图中，x是祖先节点，"],["d[y] = 1",[["c"]]],[" 表示y吃根节点，"],["d[z] = 2",[["c"]]],[" 表示z被根节点吃，"],["d[k] = 3, d[k] % 3 = 0",[["c"]]],[" 表示k和x是同类。我们可以根据d的值推断出任意两个节点的关系，比如说z和y就是z吃y的关系，而k和y是同类。"]]},"created_time":1675654069322,"last_edited_time":1675655361423,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"27f6dfc9-6730-4cfe-8f19-822c64a780a4":{"value":{"id":"27f6dfc9-6730-4cfe-8f19-822c64a780a4","version":14,"type":"image","properties":{"size":[["44.3KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c2c24577-e41a-44b5-bc28-54d61b6d6d43/Untitled.png"]]},"format":{"block_width":240,"block_height":1184,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c2c24577-e41a-44b5-bc28-54d61b6d6d43/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":2.4262295081967213,"block_preserve_scale":true},"created_time":1675654067296,"last_edited_time":1675654088251,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"file_ids":["c2c24577-e41a-44b5-bc28-54d61b6d6d43"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"328f0f99-98cd-42b5-ac4a-f5cd332fa66f":{"value":{"id":"328f0f99-98cd-42b5-ac4a-f5cd332fa66f","version":221,"type":"text","properties":{"title":[["根据上面的定义，我们现在考虑任意两个节点"],["x",[["c"]]],["和"],["y",[["c"]]],[", "],["x ≠ y",[["c"]]]]},"created_time":1675653795599,"last_edited_time":1675653815425,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"0b803b74-19bd-4178-b6d3-e5cb9902a079":{"value":{"id":"0b803b74-19bd-4178-b6d3-e5cb9902a079","version":119,"type":"bulleted_list","properties":{"title":[["如果x和y在同一集合"]]},"content":["f8b41559-65e6-47d6-9292-f328fc92890a","74adbc7e-6e7f-4c97-adc4-ec2fbc6a1be1","a666c4a3-b957-47f6-91c5-9946d6d020b6","8a004dc9-7406-45a5-9107-69a8cfd51275"],"created_time":1675653818238,"last_edited_time":1675654374920,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"f8b41559-65e6-47d6-9292-f328fc92890a":{"value":{"id":"f8b41559-65e6-47d6-9292-f328fc92890a","version":155,"type":"bulleted_list","properties":{"title":[["如果x和y是同类，那么"],["(d[x] - d[y]) % 3 = 0",[["c"]]],[" 成立。"]]},"content":["3463375b-cf10-442a-a060-046d28647746"],"created_time":1675653824538,"last_edited_time":1675653937907,"parent_id":"0b803b74-19bd-4178-b6d3-e5cb9902a079","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"3463375b-cf10-442a-a060-046d28647746":{"value":{"id":"3463375b-cf10-442a-a060-046d28647746","version":246,"type":"bulleted_list","properties":{"title":[["这里表示x和y都和根节点是同类，因此x和y是同类"]]},"created_time":1675653937725,"last_edited_time":1675653959936,"parent_id":"f8b41559-65e6-47d6-9292-f328fc92890a","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"74adbc7e-6e7f-4c97-adc4-ec2fbc6a1be1":{"value":{"id":"74adbc7e-6e7f-4c97-adc4-ec2fbc6a1be1","version":207,"type":"bulleted_list","properties":{"title":[["如果x吃y，那么"],["(d[x] - d[y] - 1) % 3 = 0",[["c"]]],[" 成立"]]},"content":["f3d93dc5-7848-4a47-83c5-49a4d76a8974"],"created_time":1675653843553,"last_edited_time":1675653960803,"parent_id":"0b803b74-19bd-4178-b6d3-e5cb9902a079","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"f3d93dc5-7848-4a47-83c5-49a4d76a8974":{"value":{"id":"f3d93dc5-7848-4a47-83c5-49a4d76a8974","version":271,"type":"bulleted_list","properties":{"title":[["这里表示x吃根节点，而y和根节点是同类，因此x吃y"]]},"created_time":1675653960512,"last_edited_time":1675653978403,"parent_id":"74adbc7e-6e7f-4c97-adc4-ec2fbc6a1be1","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"a666c4a3-b957-47f6-91c5-9946d6d020b6":{"value":{"id":"a666c4a3-b957-47f6-91c5-9946d6d020b6","version":107,"type":"bulleted_list","properties":{"title":[["如果x被y吃，那么"],["(d[x] - d[y] - 2) % 3 = 0",[["c"]]],[" 成立"]]},"created_time":1675653868472,"last_edited_time":1675653899943,"parent_id":"0b803b74-19bd-4178-b6d3-e5cb9902a079","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"8a004dc9-7406-45a5-9107-69a8cfd51275":{"value":{"id":"8a004dc9-7406-45a5-9107-69a8cfd51275","version":349,"type":"text","properties":{"title":[["这里需要取模，是因为d[x]的值很有可能超过3，所以我们用%3来约束d[i]的值域，便于判断。"]]},"created_time":1675653903399,"last_edited_time":1675654373652,"parent_id":"0b803b74-19bd-4178-b6d3-e5cb9902a079","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"1a8b46df-2589-4f97-81f3-fd72b292d8fd":{"value":{"id":"1a8b46df-2589-4f97-81f3-fd72b292d8fd","version":271,"type":"bulleted_list","properties":{"title":[["如果x和y不在同一个集合，则需要合并，方便以后判断"]]},"content":["dcac6f7b-4125-4cdc-8ffb-cf00da99094b","8cf54080-2986-4de7-9d58-f92d648ea1f1","47338ca8-9f63-4a9f-b953-294334e9cde8","ed9c5b4e-1b0c-4ae4-b4aa-b2b0599b1dd7"],"created_time":1675654374152,"last_edited_time":1675654580280,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"dcac6f7b-4125-4cdc-8ffb-cf00da99094b":{"value":{"id":"dcac6f7b-4125-4cdc-8ffb-cf00da99094b","version":8,"type":"image","properties":{"size":[["40.8KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/dff9c13f-5f05-4148-a7da-957ea5b5473d/Untitled.png"]]},"format":{"block_width":480,"block_height":442,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/dff9c13f-5f05-4148-a7da-957ea5b5473d/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":0.6597014925373135,"copied_from_pointer":{"id":"eda2d504-318e-4a13-80d5-99033cea478e","table":"block","spaceId":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"block_preserve_scale":true},"created_time":1675654402709,"last_edited_time":1675654418714,"parent_id":"1a8b46df-2589-4f97-81f3-fd72b292d8fd","parent_table":"block","alive":true,"copied_from":"eda2d504-318e-4a13-80d5-99033cea478e","file_ids":["dff9c13f-5f05-4148-a7da-957ea5b5473d"],"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"8cf54080-2986-4de7-9d58-f92d648ea1f1":{"value":{"id":"8cf54080-2986-4de7-9d58-f92d648ea1f1","version":750,"type":"text","properties":{"title":[["比如说上面的情况，给定x和y，以及它们的祖先节点px和py，还有距离d[x]和d[y]，想要合并px到py，那么d[px]应该等于多少呢？"]]},"created_time":1675654415248,"last_edited_time":1675655400137,"parent_id":"1a8b46df-2589-4f97-81f3-fd72b292d8fd","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"47338ca8-9f63-4a9f-b953-294334e9cde8":{"value":{"id":"47338ca8-9f63-4a9f-b953-294334e9cde8","version":430,"type":"bulleted_list","properties":{"title":[["如果x和y是同类，那么"],["(d[x] + d[px] - d[y]) % 3 = 0",[["c"]]],[" 成立，可以推断出"],["d[px] = (d[y] - d[x]) %3",[["c"]]]]},"created_time":1675654485791,"last_edited_time":1675655393187,"parent_id":"1a8b46df-2589-4f97-81f3-fd72b292d8fd","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"ed9c5b4e-1b0c-4ae4-b4aa-b2b0599b1dd7":{"value":{"id":"ed9c5b4e-1b0c-4ae4-b4aa-b2b0599b1dd7","version":219,"type":"bulleted_list","properties":{"title":[["如果x吃y，那么"],["(d[x] + d[px] - d[y] - 1) % 3 = 0",[["c"]]],[" 成立，可以推断出"],["d[px] = (d[y] - d[x] + 1) %3",[["c"]]]]},"created_time":1675654578591,"last_edited_time":1675655389406,"parent_id":"1a8b46df-2589-4f97-81f3-fd72b292d8fd","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"974f7ab9-26ed-4659-9131-d4b7fd4847d7":{"value":{"id":"974f7ab9-26ed-4659-9131-d4b7fd4847d7","version":421,"type":"text","properties":{"title":[["经过上面讨论，我们已经可以判断任意两个节点之间的关系了，接下来就可以写出答案了。"]]},"created_time":1675653930219,"last_edited_time":1675654670230,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"b380f7f7-fee7-4976-915c-ca416e50da3e":{"value":{"id":"b380f7f7-fee7-4976-915c-ca416e50da3e","version":4,"type":"text","properties":{"title":[["题目给出的两类语句："]]},"created_time":1675652685236,"last_edited_time":1675654409966,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"e2815dda-2763-42fc-9915-f1f814f0752e":{"value":{"id":"e2815dda-2763-42fc-9915-f1f814f0752e","version":64,"type":"text","properties":{"title":[["1 x y",[["c"]]],["表示x和y是同类"]]},"created_time":1675652699216,"last_edited_time":1675652748807,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"62305182-f351-4311-b019-34681c3524f0":{"value":{"id":"62305182-f351-4311-b019-34681c3524f0","version":75,"type":"text","properties":{"title":[["2 x y",[["c"]]],["表示x吃y"]]},"created_time":1675652704266,"last_edited_time":1675652715578,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"1d567d67-9870-4627-a86d-56507b9f6fc8":{"value":{"id":"1d567d67-9870-4627-a86d-56507b9f6fc8","version":1132,"type":"text","properties":{"title":[["在我们拿到一个语句的时候，我们先判断这个语句是否是假话，如果是假话，我们什么都不做，否则的话当前话是真话，我们根据真话来执行相应操作，比如说如果x和y属于不同集合，且当前话是真话，那么就要合并x和y的两个集合，方便后续判断"]]},"created_time":1675652716366,"last_edited_time":1675655581479,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"5814d0ee-1241-4376-a664-f600c2657c3d":{"value":{"id":"5814d0ee-1241-4376-a664-f600c2657c3d","version":69,"type":"toggle","properties":{"title":[["答案"]]},"content":["431a58bb-9bfa-43b3-9851-21b1937e859e","5842aa76-afd7-47a3-912f-3c9969611135"],"created_time":1675655323806,"last_edited_time":1675655484756,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"8c08fbdc-f627-4d85-bd0d-7fd97c89d043":{"value":{"id":"8c08fbdc-f627-4d85-bd0d-7fd97c89d043","version":57,"type":"text","properties":{"title":[["种类并查集",[["b"]]]]},"created_time":1675655583724,"last_edited_time":1675655592010,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"be5e096e-c2ee-40c9-9251-5e778fd73f69":{"value":{"id":"be5e096e-c2ee-40c9-9251-5e778fd73f69","version":638,"type":"text","properties":{"title":[["当前有三类元素，我们开3n的空间。用i + n来表示i的捕食对象，i+2n来表示i的天敌。"]]},"created_time":1675655592402,"last_edited_time":1675664072400,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"0e30ba58-6a40-4e4a-b02f-006f4c4a7621":{"value":{"id":"0e30ba58-6a40-4e4a-b02f-006f4c4a7621","version":556,"type":"text","properties":{"title":[["这三类集合如果存在联系，那么就是某种关系存在，举个例子"]]},"created_time":1675655678406,"last_edited_time":1675663930405,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"60e2a569-5d05-4605-8c90-b8faa44b9a64":{"value":{"id":"60e2a569-5d05-4605-8c90-b8faa44b9a64","version":295,"type":"text","properties":{"title":[["如果(x, y + 2n) 存在一条边，那么就表示 y 是 x 的天敌"]]},"created_time":1675663930678,"last_edited_time":1675664100285,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"b8fd920c-3814-40cc-9398-ebec9a991766":{"value":{"id":"b8fd920c-3814-40cc-9398-ebec9a991766","version":204,"type":"text","properties":{"title":[["如果(x, y + n) 存在一条边，那么就表示 x 吃 y"]]},"created_time":1675663950477,"last_edited_time":1675664102440,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"6c61980b-f475-43e4-b4b9-6b05fc7a43af":{"value":{"id":"6c61980b-f475-43e4-b4b9-6b05fc7a43af","version":102,"type":"toggle","properties":{"title":[["答案"]]},"content":["cbe7ee59-1091-46aa-84a3-0b595a5cc8f7","0951220d-fb3d-4d43-9f38-766d9c02bec9","dc1e95d8-4646-49e1-9342-54b43ab51841"],"created_time":1675664137781,"last_edited_time":1675664192052,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"d82da679-3039-491a-b1b5-15372a116f36":{"value":{"id":"d82da679-3039-491a-b1b5-15372a116f36","version":9,"type":"text","created_time":1675664233766,"last_edited_time":1675664340417,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"8120be68-a971-4082-927c-98b972b45ecb":{"value":{"id":"8120be68-a971-4082-927c-98b972b45ecb","version":53,"type":"sub_header","properties":{"title":[["关押罪犯"]]},"created_time":1675664233766,"last_edited_time":1675664345167,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"dabd88d8-5be1-4d19-8fd3-dfa4569f246a":{"value":{"id":"dabd88d8-5be1-4d19-8fd3-dfa4569f246a","version":7,"type":"text","properties":{"title":[["257. 关押罪犯 - AcWing题库",[["a","https://www.acwing.com/problem/content/description/259/"]]]]},"created_time":1675664345285,"last_edited_time":1675664347577,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"efea4489-810b-41c0-a307-5d181ac2d92a":{"value":{"id":"efea4489-810b-41c0-a307-5d181ac2d92a","version":55,"type":"text","properties":{"title":[["种类并查集",[["b"]]]]},"created_time":1675665623425,"last_edited_time":1675665627942,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"ec1d6e05-f7da-4e63-ac09-c6bac4f2a0c9":{"value":{"id":"ec1d6e05-f7da-4e63-ac09-c6bac4f2a0c9","version":924,"type":"text","properties":{"title":[["我们可以按照边权降序排序，优先将大的边分布在集合之间，就是优先把大冲突的两个节点关在不同监狱，直到无法这么做（无法安排在不同监狱），此时的冲突就是最小的冲突。"]]},"created_time":1675664348619,"last_edited_time":1675664428340,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"13fe00e8-897d-419c-b5ef-e362468f3603":{"value":{"id":"13fe00e8-897d-419c-b5ef-e362468f3603","version":543,"type":"text","properties":{"title":[["显然我们可以分为两类元素，那么需要2 * n的空间。n ~ 2*n 表示敌人。"]]},"created_time":1675664428563,"last_edited_time":1675664487114,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"36db7c54-9849-4c1b-a50c-12789e4b112f":{"value":{"id":"36db7c54-9849-4c1b-a50c-12789e4b112f","version":50,"type":"toggle","properties":{"title":[["答案"]]},"content":["eb015261-ea93-4d12-bf69-47f4af32c5b4","6eab1d0c-a353-4c98-911f-dc4f4689936f"],"created_time":1675664487808,"last_edited_time":1675665356125,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"437a0584-19f2-4d3c-b6e4-a14f02291a46":{"value":{"id":"437a0584-19f2-4d3c-b6e4-a14f02291a46","version":73,"type":"text","properties":{"title":[["带权并查集",[["b"]]]]},"created_time":1675665435798,"last_edited_time":1675665633566,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"c75d4478-a246-4908-80e6-5fcd641aaeb7":{"value":{"id":"c75d4478-a246-4908-80e6-5fcd641aaeb7","version":169,"type":"text","properties":{"title":[["这道题目也可以用带权并查集+二分来做。"]]},"created_time":1675665894538,"last_edited_time":1675665904006,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"d73a0a13-1ba0-4b1e-9beb-3e6999849cb1":{"value":{"id":"d73a0a13-1ba0-4b1e-9beb-3e6999849cb1","version":1118,"type":"text","properties":{"title":[["假设答案是mid，那么所有大于mid的边中，边的两端x和y是不连通的，就是说它们属于不同的类别。那么我们可以使用二分来枚举mid，使用一个"],["check()",[["c"]]],["函数来判断当前枚举值是否可行。"]]},"created_time":1675665904225,"last_edited_time":1675666060935,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"bc26e95d-0933-4dda-a2a7-9ab1c320f88a":{"value":{"id":"bc26e95d-0933-4dda-a2a7-9ab1c320f88a","version":550,"type":"text","properties":{"title":[["check",[["c"]]],[" 函数的细节就是，对于所有大于mid的边，如果我们发现两个端点是同一类中，那么就返回false，重复直到没有边，返回true。"]]},"created_time":1675665982176,"last_edited_time":1675666034146,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"d0975a03-c424-4e1a-81a5-b6d171a42165":{"value":{"id":"d0975a03-c424-4e1a-81a5-b6d171a42165","version":376,"type":"text","properties":{"title":[["如何描述两个点是否属于同一类，可以用带权并查集来实现，0 和 1 分别表示两个类别。"]]},"created_time":1675666020830,"last_edited_time":1675666078470,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"256aed8f-3621-4ec5-be05-bc67e5529c5d":{"value":{"id":"256aed8f-3621-4ec5-be05-bc67e5529c5d","version":67,"type":"text","properties":{"title":[["接下来我们可以写出代码："]]},"created_time":1675666080523,"last_edited_time":1675666084245,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"83cc3b6e-02ea-45d3-8251-84b30b319848":{"value":{"id":"83cc3b6e-02ea-45d3-8251-84b30b319848","version":51,"type":"toggle","properties":{"title":[["答案"]]},"content":["865f1a1e-9624-4b3a-bbde-b59ba6bff796","6a1cdd91-c201-484f-b720-eedd4e3e6b47"],"created_time":1675667868885,"last_edited_time":1675667994869,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"bc3bba95-e537-43c3-9479-f3c46665828b":{"value":{"id":"bc3bba95-e537-43c3-9479-f3c46665828b","version":827,"type":"text","properties":{"title":[["当然这里也可以把带权并查集换成种类并查集，同样用二分解决，不过直接用种类并查集的性质比较优雅。"]]},"created_time":1675665946686,"last_edited_time":1675668273738,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"dadd6171-c23f-4c47-b2c2-b2ed76a7280c":{"value":{"id":"dadd6171-c23f-4c47-b2c2-b2ed76a7280c","version":28,"type":"toggle","properties":{"title":[["答案"]]},"content":["432d54c8-d1a7-4c21-a937-3b6dde99b1e7"],"created_time":1675668151055,"last_edited_time":1675668153432,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"b196fc37-2dfe-417c-9acf-5ba7241c08d7":{"value":{"id":"b196fc37-2dfe-417c-9acf-5ba7241c08d7","version":28,"type":"header","properties":{"title":[["总结"]]},"created_time":1675665435798,"last_edited_time":1675665438290,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"a64c1481-c5e7-4994-adea-f737317faffe":{"value":{"id":"a64c1481-c5e7-4994-adea-f737317faffe","version":301,"type":"text","properties":{"title":[["本文介绍了朴素并查集，带权并查集，种类并查集，这里总结一下他们的区别"]]},"created_time":1675665438381,"last_edited_time":1675665487938,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"a44b2439-3511-4220-8ff2-a1560ec93609":{"value":{"id":"a44b2439-3511-4220-8ff2-a1560ec93609","version":386,"type":"bulleted_list","properties":{"title":[["朴素并查集：最常用的一类并查集，用来管理元素的从属关系。"]]},"created_time":1675665457873,"last_edited_time":1675665669098,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"3594b93d-c80a-49e3-a151-89fe6af4f641":{"value":{"id":"3594b93d-c80a-49e3-a151-89fe6af4f641","version":641,"type":"bulleted_list","properties":{"title":[["带权并查集：在朴素并查集上添加了权重"],["d",[["c"]]],[" ，"],["d",[["c"]]],[" 可以根据题目的不同来表示不同的含义，使用时需要确定"],["merge",[["c"]]],["和"],["find",[["c"]]],["操作如何更新d"]]},"created_time":1675665481478,"last_edited_time":1675665620673,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"b5db9287-f8cc-435a-adba-181c8a47e566":{"value":{"id":"b5db9287-f8cc-435a-adba-181c8a47e566","version":494,"type":"bulleted_list","properties":{"title":[["种类并查集：一般维护若干个n的区间，每个区间表示不同含义，通过merge不同区间的节点，标识某种关系的存在"]]},"created_time":1675665616345,"last_edited_time":1675668762014,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"f070095c-8ec3-4b28-a2a5-7d5edbf258b6":{"value":{"id":"f070095c-8ec3-4b28-a2a5-7d5edbf258b6","version":1118,"type":"text","properties":{"title":[["一般种类并查集都可以用带权并查集来做，我们定义好d的含义即可，而且只有总节点数的比较小情况下才能用种类并查集，不然开若干个区间可能会溢出。但是种类并查集的思想和含义也比较简洁，有的时候可以利用它的性质来巧妙解题。"]]},"created_time":1675668762231,"last_edited_time":1675668870113,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"e03ba5df-13e6-471e-83ed-3ee25793e00f":{"value":{"id":"e03ba5df-13e6-471e-83ed-3ee25793e00f","version":4,"type":"header","properties":{"title":[["Ref"]]},"created_time":1675572161188,"last_edited_time":1675664160953,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"662c7741-f1d6-4443-b4c1-16ce5c49f963":{"value":{"id":"662c7741-f1d6-4443-b4c1-16ce5c49f963","version":25,"type":"text","properties":{"title":[["并查集 - OI Wiki (oi-wiki.org)",[["a","https://oi-wiki.org/ds/dsu/"]]]]},"created_time":1675572180190,"last_edited_time":1675572188125,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"c7eac456-55aa-463d-b01a-056355e78f2f":{"value":{"id":"c7eac456-55aa-463d-b01a-056355e78f2f","version":7,"type":"text","properties":{"title":[["并查集到带权并查集 - zhxmdefj - 博客园 (cnblogs.com)",[["a","https://www.cnblogs.com/zhxmdefj/p/11117791.html"]]]]},"created_time":1675592515057,"last_edited_time":1675592519505,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"3e8cd891-33b9-4337-838f-63ba277b1b4c":{"value":{"id":"3e8cd891-33b9-4337-838f-63ba277b1b4c","version":7,"type":"text","properties":{"title":[["算法学习笔记(7)：种类并查集 - 知乎 (zhihu.com)",[["a","https://zhuanlan.zhihu.com/p/97813717"]]]]},"created_time":1675596080446,"last_edited_time":1675596080633,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"91696f2d-8f0a-4702-af8d-5cffd04f1e7b":{"value":{"id":"91696f2d-8f0a-4702-af8d-5cffd04f1e7b","version":5,"type":"text","created_time":1675596084871,"last_edited_time":1675669246434,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"ed39e1d7-11f8-4744-a161-9243d98033a6":{"value":{"id":"ed39e1d7-11f8-4744-a161-9243d98033a6","version":85,"type":"text","properties":{"title":[["更多例题："]]},"created_time":1675596084871,"last_edited_time":1675669390822,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"0f6af6f4-5967-408a-8edb-615fa6b814e0":{"value":{"id":"0f6af6f4-5967-408a-8edb-615fa6b814e0","version":7,"type":"text","properties":{"title":[["hdu1232 城镇交通",[["b"],["b"]]]]},"created_time":1675669249440,"last_edited_time":1675669258870,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"f50a8de5-daba-440a-bb49-ae7ee6ee1128":{"value":{"id":"f50a8de5-daba-440a-bb49-ae7ee6ee1128","version":7,"type":"text","properties":{"title":[["poj1611 感染的学生",[["b"],["b"]]]]},"created_time":1675669264650,"last_edited_time":1675669264863,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"9775b549-5027-43c8-816c-9bf9e4e00188":{"value":{"id":"9775b549-5027-43c8-816c-9bf9e4e00188","version":7,"type":"text","properties":{"title":[["hdu3038",[["b"],["b"]]]]},"created_time":1675669270950,"last_edited_time":1675669271171,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"5cb0b6af-4f02-4fe8-8e7e-e631a2dd1eab":{"value":{"id":"5cb0b6af-4f02-4fe8-8e7e-e631a2dd1eab","version":7,"type":"text","properties":{"title":[["POJ2492",[["b"],["b"]]]]},"created_time":1675669277199,"last_edited_time":1675669277403,"parent_id":"553879bb-db6e-448d-8adc-68864d7be6cf","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"f8fd91b1-d9b3-4687-8b20-eeb7096d66a9":{"value":{"id":"f8fd91b1-d9b3-4687-8b20-eeb7096d66a9","version":199,"type":"code","properties":{"title":[["#include <iostream>\nusing namespace std;\nconst int N = 1e4 * 3 + 10;\nint p[N], d[N], s[N]; // s表示size，仅有祖先节点才有效\nint t, a, b;\nchar m[2];\n\nvoid init()\n{\n    for (int i = 0; i < N; i++)\n    {\n        p[i] = i;\n        s[i] = 1;\n    }\n}\n\nint find(int x)\n{\n    if (x != p[x])\n    {\n        int u = find(p[x]);\n        d[x] += d[p[x]];\n        p[x] = u;\n    }\n    return p[x];\n}\n\nint merge(int x, int y)\n{\n    int px = find(x), py = find(y);\n    p[px] = py;\n    d[px] = s[py]; // 应该设置为y所属集合的节点数\n    s[py] += s[px];\n}\n\nint query(int x, int y)\n{\n    int px = find(x), py = find(y);\n    if (px != py)\n        return -1;\n    return max(0, abs(d[x] - d[y]) - 1); // 有可能x = y\n}\nint main()\n{\n    init();\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; i++)\n    {\n        scanf(\"%s%d%d\", m, &a, &b);\n        if (m[0] == 'M')\n        {\n            if (find(a) == find(b))\n                continue;\n            merge(a, b);\n        }\n        else\n        {\n            printf(\"%d\\n\", query(a, b));\n        }\n    }\n}"]],"language":[["C++"]]},"created_time":1675651050809,"last_edited_time":1675651505562,"parent_id":"64d8a066-268c-43d4-a085-7624ffd9b45a","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"431a58bb-9bfa-43b3-9851-21b1937e859e":{"value":{"id":"431a58bb-9bfa-43b3-9851-21b1937e859e","version":7,"type":"code","properties":{"title":[["#include <iostream>\nusing namespace std;\nconst int N = 50010, M = 1e5 + 10;\nint p[N], d[N];\nint res;\nint n, k;\nvoid init()\n{\n    for (int i = 0; i < N; i++)\n        p[i] = i;\n}\nint find(int x)\n{\n    if (x != p[x])\n    {\n        int u = p[x];\n        p[x] = find(p[x]);\n        d[x] += d[u];\n    }\n    return p[x];\n}\n\nint main()\n{\n    init();\n    scanf(\"%d%d\", &n, &k);\n    int c, x, y;\n    while (k--)\n    {\n        scanf(\"%d%d%d\", &c, &x, &y);\n        if (x > n || y > n)\n            res++;\n        else\n        {\n            int px = find(x), py = find(y);\n            if (c == 1)\n            {\n                // 如果x和y处于同一集合，且x和y的关系不是同类，那么当前是假话\n                if (px == py && (d[x] - d[y]) % 3 != 0)\n                    res++;\n                else if (px != py) // 如果不是假话，那么我们根据需要来合并\n                {\n                    // 如果x和y不属于同一个集合，那么合并两个集合\n                    p[px] = py;\n                    d[px] = (d[y] - d[x]) % 3;\n                }\n            }\n            else\n            {\n                if (px == py && (d[x] - d[y] - 1) % 3 != 0)\n                    res++;\n                else if (px != py)\n                {\n                    // 如果x和y不属于同一个集合，那么合并两个集合\n                    p[px] = py;\n                    d[px] = (d[y] - d[x] + 1) % 3;\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\", res);\n}"]],"language":[["C++"]]},"created_time":1675655337421,"last_edited_time":1675655337674,"parent_id":"5814d0ee-1241-4376-a664-f600c2657c3d","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"5842aa76-afd7-47a3-912f-3c9969611135":{"value":{"id":"5842aa76-afd7-47a3-912f-3c9969611135","version":82,"type":"text","created_time":1675655483535,"last_edited_time":1675655493413,"parent_id":"5814d0ee-1241-4376-a664-f600c2657c3d","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"cbe7ee59-1091-46aa-84a3-0b595a5cc8f7":{"value":{"id":"cbe7ee59-1091-46aa-84a3-0b595a5cc8f7","version":7,"type":"code","properties":{"title":[["#include <iostream>\nusing namespace std;\nconst int N = 15 * 1e4 + 10;\nint n, k, res;\nint p[N];\nvoid init()\n{\n    for (int i = 1; i <= n * 3; i++)\n    {\n        p[i] = i;\n    }\n}\nint find(int x)\n{\n    if (x != p[x])\n    {\n        p[x] = find(p[x]);\n    }\n    return p[x];\n}\n\nbool query(int x, int y)\n{\n    return find(x) == find(y);\n}\n\nvoid merge(int x, int y)\n{\n    int px = find(x), py = find(y);\n    p[px] = py;\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &k);\n    init();\n    int c, x, y;\n    while (k--)\n    {\n        scanf(\"%d%d%d\", &c, &x, &y);\n        if (x > n || y > n)\n            res++;\n        else\n        {\n            if (c == 1)\n            {\n                // 如果x吃y或者x被y吃，假话\n                if (query(x, y + n) || query(x, y + 2 * n))\n                    res++;\n                else\n                {\n                    // 否则x和y同类，则x的猎物是y的猎物，x的天敌是y的天敌\n                    merge(x, y);\n                    merge(x + n, y + n);\n                    merge(x + 2 * n, y + 2 * n);\n                }\n            }\n            else if (c == 2)\n            {\n                // 如果x和y是同类，或者y是x的天敌，假话\n                if (query(x, y) || query(x, y + 2 * n))\n                    res++;\n                else\n                {\n                    // 否则x吃y是真的\n                    merge(x, y + n);         // x吃y\n                    merge(x + n, y + 2 * n); // x的猎物吃y的猎物（传递性）\n                    merge(x + 2 * n, y);     // y吃x的天敌\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\", res);\n}"]],"language":[["C++"]]},"created_time":1675664147824,"last_edited_time":1675664153219,"parent_id":"6c61980b-f475-43e4-b4b9-6b05fc7a43af","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"0951220d-fb3d-4d43-9f38-766d9c02bec9":{"value":{"id":"0951220d-fb3d-4d43-9f38-766d9c02bec9","version":466,"type":"text","properties":{"title":[["这里关键的地方就是merge的选择了，如果是同类的话很好理解，如果x吃y的话，我们要顺着这个逻辑把所有边都merge，不然就没法通过了。"]]},"created_time":1675664160953,"last_edited_time":1675664191824,"parent_id":"6c61980b-f475-43e4-b4b9-6b05fc7a43af","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"dc1e95d8-4646-49e1-9342-54b43ab51841":{"value":{"id":"dc1e95d8-4646-49e1-9342-54b43ab51841","version":10,"type":"text","created_time":1675664192046,"last_edited_time":1675664229941,"parent_id":"6c61980b-f475-43e4-b4b9-6b05fc7a43af","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"eb015261-ea93-4d12-bf69-47f4af32c5b4":{"value":{"id":"eb015261-ea93-4d12-bf69-47f4af32c5b4","version":21,"type":"text","created_time":1675665356120,"last_edited_time":1675665433180,"parent_id":"36db7c54-9849-4c1b-a50c-12789e4b112f","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"6eab1d0c-a353-4c98-911f-dc4f4689936f":{"value":{"id":"6eab1d0c-a353-4c98-911f-dc4f4689936f","version":10,"type":"code","properties":{"title":[["#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N = 4 * 1e4 + 10, M = 1e5 + 10;\nint p[N];\nstruct Edge\n{\n    int x, y, w;\n    bool operator<(const Edge &W) const\n    {\n        return w > W.w;\n    }\n\n} edges[M];\n\nint find(int x)\n{\n    if (x != p[x])\n    {\n        p[x] = find(p[x]);\n    }\n    return p[x];\n}\n\nbool query(int x, int y)\n{\n    return find(x) == find(y);\n}\n\nvoid merge(int x, int y)\n{\n    int px = find(x), py = find(y);\n    p[px] = py;\n}\n\nint main()\n{\n    for (int i = 0; i < N; i++)\n        p[i] = i;\n    int n, m;\n    int x, y, w;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < m; i++)\n    {\n        scanf(\"%d%d%d\", &x, &y, &w);\n        edges[i] = {x, y, w};\n    }\n    sort(edges, edges + m);\n    for (int i = 0; i < m; i++)\n    {\n        x = edges[i].x, y = edges[i].y, w = edges[i].w;\n        if (query(x, y)) // 试图把处于同一集合的元素分开，矛盾\n        {\n            // 此时的冲突就是无法避免的，输出\n            printf(\"%d\\n\", w);\n            return 0;\n        }\n        // 标记敌人关系\n        merge(x, y + n);\n        merge(x + n, y);\n    }\n    printf(\"0\\n\");\n    return 0;\n}"]],"language":[["C++"]]},"created_time":1675665354626,"last_edited_time":1675665431255,"parent_id":"36db7c54-9849-4c1b-a50c-12789e4b112f","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"865f1a1e-9624-4b3a-bbde-b59ba6bff796":{"value":{"id":"865f1a1e-9624-4b3a-bbde-b59ba6bff796","version":340,"type":"text","properties":{"title":[["这里的一个小技巧是用xor来模拟无进位加法，值域限制在0和1，代替%2的操作"]]},"created_time":1675667879206,"last_edited_time":1675668013836,"parent_id":"83cc3b6e-02ea-45d3-8251-84b30b319848","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"6a1cdd91-c201-484f-b720-eedd4e3e6b47":{"value":{"id":"6a1cdd91-c201-484f-b720-eedd4e3e6b47","version":247,"type":"code","properties":{"title":[["#include <cstring>\n#include <iostream>\nusing namespace std;\nconst int N = 2 * 1e4 + 10, M = 1e5 + 10;\nint n, m, x, y, w;\nint p[N], d[N];\nstruct Edge\n{\n    int x, y, w;\n} edges[M];\n\nvoid init()\n{\n    memset(d, 0, sizeof d);\n    for (int i = 1; i <= n; i++)\n        p[i] = i;\n}\n\nint find(int x)\n{\n    if (x != p[x])\n    {\n        int u = p[x];\n        p[x] = find(p[x]);\n        d[x] ^= d[u];\n    }\n    return p[x];\n}\n\nbool check(int mid)\n{\n    init();\n    for (int i = 0; i < m; i++)\n    {\n        x = edges[i].x, y = edges[i].y, w = edges[i].w;\n        if (w <= mid)\n            continue;\n        int px = find(x), py = find(y);\n        if (px == py)\n            if (!(d[x] ^ d[y])) // xor 结果为0，表示它们属于同一类\n                return false;\n        if (px != py)\n        {\n            p[px] = py;\n            d[px] = d[x] ^ d[y] ^ 1; // 因为是不同类，所以要 ^ 1\n        }\n    }\n    return true;\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < m; i++)\n    {\n        scanf(\"%d%d%d\", &x, &y, &w);\n        edges[i] = {x, y, w};\n    }\n    int l = 0, r = 1e9;\n    while (l < r)\n    {\n        int mid = l + r >> 1;\n        if (check(mid))\n            r = mid;\n        else\n            l = mid + 1;\n    }\n    printf(\"%d\", r);\n}"]],"language":[["C++"]]},"created_time":1675667867263,"last_edited_time":1675667947149,"parent_id":"83cc3b6e-02ea-45d3-8251-84b30b319848","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"},"432d54c8-d1a7-4c21-a937-3b6dde99b1e7":{"value":{"id":"432d54c8-d1a7-4c21-a937-3b6dde99b1e7","version":7,"type":"code","properties":{"title":[["#include <cstring>\n#include <iostream>\nusing namespace std;\nconst int N = 2 * 1e4 + 10, M = 1e5 + 10;\nint n, m, x, y, w;\nint p[N * 2];\nstruct Edge\n{\n    int x, y, w;\n} edges[M];\n\nvoid init(int n)\n{\n    for (int i = 1; i <= 2 * n; i++)\n        p[i] = i;\n}\n\nint find(int x)\n{\n    if (x != p[x])\n    {\n        int u = p[x];\n        p[x] = find(p[x]);\n    }\n    return p[x];\n}\n\nbool query(int x, int y) { return find(x) == find(y); }\n\nvoid merge(int x, int y)\n{\n    int px = find(x), py = find(y);\n    p[px] = py;\n}\n\nbool check(int mid)\n{\n    init(n);\n    for (int i = 0; i < m; i++)\n    {\n        x = edges[i].x, y = edges[i].y, w = edges[i].w;\n        if (w <= mid)\n            continue;\n        if (query(x, y))\n            return false;\n        merge(x, y + n);\n        merge(x + n, y);\n    }\n    return true;\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < m; i++)\n    {\n        scanf(\"%d%d%d\", &x, &y, &w);\n        edges[i] = {x, y, w};\n    }\n    int l = 0, r = 1e9;\n    while (l < r)\n    {\n        int mid = l + r >> 1;\n        if (check(mid))\n            r = mid;\n        else\n            l = mid + 1;\n    }\n    printf(\"%d\", r);\n}"]],"language":[["C++"]]},"created_time":1675668153430,"last_edited_time":1675668634857,"parent_id":"dadd6171-c23f-4c47-b2c2-b2ed76a7280c","parent_table":"block","alive":true,"created_by_table":"notion_user","created_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","last_edited_by_table":"notion_user","last_edited_by_id":"83b4963a-e71e-4bac-9a62-dabfcb042aec","space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"}},"collection":{"a3ce75fe-7085-406b-a33f-74958ef7ee13":{"value":{"id":"a3ce75fe-7085-406b-a33f-74958ef7ee13","version":21,"name":[["NOBELIUM Template"]],"schema":{"NX\\Q":{"name":"date","type":"date"},"`gQ~":{"name":"type","type":"select","options":[{"id":"5aff2f95-fd1e-489b-8840-bf10bc9519cb","color":"purple","value":"Post"},{"id":"374d2bc6-a144-4832-8ca4-474aaae0ea1f","color":"orange","value":"Page"}]},"d]hq":{"name":"slug","type":"text"},"sD^m":{"name":"tags","type":"multi_select","options":[{"id":"149b2bfe-eff9-4a8e-a509-740376958f01","color":"orange","value":"计算机网络"},{"id":"fbfb28ff-2898-4f5b-a8e9-f18499a0f3da","color":"default","value":"Go"},{"id":"a7a581b6-5d07-466e-b0c8-69b6752bf06e","color":"gray","value":"数据库"},{"id":"7352dc92-14af-4c61-a6e4-1abfed244c4c","color":"purple","value":"算法"},{"id":"a0ac81ef-d914-4f04-b0e4-780ef5b84be4","color":"pink","value":"Vim"}]},"wz|S":{"name":"summary","type":"text"},"title":{"name":"title","type":"title"},"f211bdc0-ee00-4186-9a7d-f68c055ec2ee":{"name":"status","type":"select","options":[{"id":"22460321-fea2-4c7c-b352-a674760780ac","color":"orange","value":"Idea"},{"id":"41d5f5c6-b53c-42bc-8e0f-fc9402048480","color":"yellow","value":"Draft"},{"id":"c7390b31-9fab-4e21-94ee-7e67ea077a97","color":"blue","value":"Revise"},{"id":"7abc61d4-b405-480d-b699-12588755fa65","color":"red","value":"Published"}]}},"icon":"🎟️","format":{"copied_from_pointer":{"id":"dbf0f671-8075-49b9-b238-61e7eb9a7270","table":"collection","spaceId":"ac4cb96d-c8f8-4040-9bb2-868d9fc7f526"},"collection_page_properties":[{"visible":false,"property":"NX\\Q"},{"visible":false,"property":"d]hq"},{"visible":false,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"visible":false,"property":"sD^m"},{"visible":false,"property":"wz|S"},{"visible":false,"property":"`gQ~"}]},"parent_id":"1d21f050-c8c4-41f3-9fd4-8ff7de49c962","parent_table":"block","alive":true,"file_ids":["6cf3dc36-2f98-4f0e-9679-1bdbb1485129","5520bd92-e709-4c0d-ad58-06923f23f7e9","624d393a-62e3-4464-a1bf-1c79ecd4fbda","d52f6766-3e32-4c3d-8529-46e1f214360f"],"copied_from":"dbf0f671-8075-49b9-b238-61e7eb9a7270","migrated":true,"space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"}},"space":{},"collection_view":{"876cf270-3f6b-4f1a-b6c8-5ffbd27ca40f":{"value":{"id":"876cf270-3f6b-4f1a-b6c8-5ffbd27ca40f","version":32,"type":"table","name":"Default view","format":{"table_wrap":false,"table_properties":[{"width":416,"visible":true,"property":"title"},{"width":186,"visible":true,"property":"d]hq"},{"width":211,"visible":true,"property":"NX\\Q"},{"width":147,"visible":true,"property":"wz|S"},{"width":222,"visible":true,"property":"sD^m"},{"width":124,"visible":true,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"width":100,"visible":true,"property":"`gQ~"},{"width":200,"visible":true,"property":"gY~W"},{"width":200,"visible":true,"property":"pzWp"},{"visible":true,"property":"B;[p"}]},"parent_id":"1d21f050-c8c4-41f3-9fd4-8ff7de49c962","parent_table":"block","alive":true,"page_sort":["b1e1d645-db95-42e5-8995-39a80eda6460","e8cd3732-dc1c-43ae-959a-a5a611ec098a","e876558d-e878-47f6-8c95-21be678990a5","5a971ded-d3c5-41be-bef9-ddfff48d43a2","8db8b240-e1c5-4dd7-bf74-72584d7a2ce0","daf94ca4-ec56-47a3-84ed-b1e2479acc4b","d1a2db9b-6820-421e-9b80-017ce7478587","67ea9f83-b9f6-416b-afcb-7c64f7533e6c","45939470-9819-47e8-b12b-999cfefa0aad","c60dc33d-8efb-44be-a863-7a87ad047932","fe4b8d5f-7c49-42c6-a7d5-1cb71c4f7e86","b7233a67-c367-4198-831e-f12089568d1f","4f3bf306-92c4-41b7-a43e-957129a1240a","6a789607-66cf-498e-9b32-eb3fa69a84f4","c9429034-dabd-4a25-8782-97f20c808a60","38c49fe2-37f8-4a7f-a99f-9edb9ddad4c2","474eb638-9f6b-46bf-8004-77668293f199","81d6dfab-69cb-43a0-aa04-e9725f0b67e1","7703d956-84db-46cd-b538-48eae1af68b5","9f937c73-dac9-4ed7-9b01-beefcb321f16","3cf9dcb9-e7db-406c-80ab-c65c11fbf906","5827ab53-e051-455b-b90a-3bdc20158c2c","fa7acd3b-dea9-4fb1-b859-5345f35163c6","696dfc48-62c3-494d-96d0-ec5fa84637e8","79df93cf-9b10-452e-bc62-f39e8cd2d124","9bb8e52d-c459-4528-b1b3-c2378207253a","5da038ef-f419-4a11-aa48-587b3787e040","b4a2c9d4-6a2c-49e6-988d-89a538dfe0f6","c374a479-5cc7-4c54-ba69-6a4d76dc25ad","d470fa67-0e7c-40d8-86ac-9b5a8be88dc8","986be38b-9780-4bb9-bdcd-4e361ddbd888","b7613f56-c2d4-4aae-b967-b7471ade86d0","e357d1fc-7466-4d6a-8d48-71b76ea97cdc","e1735855-4089-4af6-bd4d-0d59f7a76cb4","9b34581a-955a-4229-99d0-8f2a6d0e69ce","b4414811-0599-45cf-b047-fa95eac42d89","c28a8a01-911a-40a2-a607-d3af8cb24017","461d07ae-4b4a-49de-bdcb-341af1153201","3df59023-cb68-4a65-afd1-7f0b8c21cb57","0e3223d1-03df-40fb-90f9-cc8559d776b5","4f45b7d6-cd5b-46ab-b2a6-37ae20bf5f21","fa475a21-5f38-43d4-9a89-67c40b3129ae","97cbc634-fe3a-4b9b-9da6-ac4aaa94772f","8a0d34bc-7e8c-4a68-88a5-5276274f612a","623f8788-a20f-45fd-bb82-08935f59b44d","7ee398f0-450b-47cb-9b53-f5e7736590d2","eae9f077-591e-4841-903b-db395513c834","367d0f2a-0b10-4dbb-b53a-613152f124f9","398e2e28-3997-49bc-a138-0467d4da8531","8aaf4633-e879-44dc-82c8-3c9fb9d3a6f8","1eb5e5f2-8dc9-4ffc-b5e1-09b67be27a83","83465fb9-205b-41fc-83a6-424692ee0a0e","fb1d18d0-6403-4e8a-840e-134553748ff5","4407cb77-3838-4ba5-b474-f15222cd3dba","1880b0f2-e036-42d0-9550-0fb08a962397","d8d60bd6-33f6-458f-a7d6-209ef2fb05a1","29bf65ff-888b-4a76-a8dd-bf54f02c3864","bad1d4ae-fd4a-4671-ae94-dd53d94e0eae","0d59792d-db1c-4ae7-8d7c-4f013be40dcf","337dc259-2805-4b1c-a60f-1b3e6c7badb8","4b1b21a8-c278-4bc6-88f1-1a35d407f4d7","7946aba2-d6d0-45ef-8779-23fa15db8f2d","c18dbce6-9e8c-4f4b-b74a-0994e7c1bc3f","84aa87b7-39e7-493c-87b9-5cae4de95449","1446eadb-8c01-4295-be3a-ecf19361c143","fe8a7d94-e9ba-457d-8f19-10fe53e6ca3c","98a5a0b6-b07b-4065-a73f-2949ad28ac47","38e3e030-5423-4343-b944-083b96fd8656","7dc3700b-1183-4e44-b4bb-cb500ae0b363","975051d4-ebbc-4b3f-98cf-1a52e5e4761d","e5d98bee-b2d5-4b45-ab0b-b77da24aebe7","acac2668-1062-4e7a-b095-eda067da8413","179025c4-d8a8-4c47-b621-9fd6a6f3339b","d256e5ed-5eac-43bb-a32e-581774962c23","3531b347-b0c9-406a-97ec-dc1233b52619","3760aeb0-084a-4e6d-88da-54a3c0311402","9c40a253-b9e8-42cd-8a99-62aaa9789a5e","f3c75b97-fd39-40bc-9473-2beb74d837b1","4d9edb9d-6ecd-4f3c-b41a-395987d6a714","c00f43c1-0fd5-45ca-a8af-e65a0bd6c990","9179759d-2b61-41a8-964e-23719e022b2d","19ad7e3a-2736-4d60-9516-6fcda35ed534","fe12b6af-37a2-4eab-a32f-5379fe881886","3634923c-2faf-4a31-a356-6ce9830706fb","6d9c82b0-2b20-425f-a87b-c9b14752bf9d","b57ebe77-5397-4ae8-b342-d19e3554f49c","1009ed18-593a-4ae7-8b32-7c39733138b5","d1d27099-40f0-4c1d-9c3b-a62349291ed2","f3ac9402-f3e4-4dc6-ae57-03d81bfd4e03","c1a9215b-4b3e-4d97-be31-f5d28736a065","8c80a9e1-a9d5-4b96-9a84-26df209c9537","ed91e3f2-5735-4c46-97db-aec5e6c4f597","7364073f-b7c8-436c-a471-779c7775fbf8","0f0ad844-b657-47c1-a04a-61d01ed706c1","6e55a5aa-680a-439d-add1-56498538aa64","7367ec26-da0a-441e-81b4-ae21068b94cf","48636b1e-62eb-449d-80db-68ee12d3caa8","f1c7db1e-871a-4529-9ba8-cd04f43979da","49477ffa-3ecf-49a3-a12d-62bea76192fc","1e50a8aa-3628-4b23-bd39-af65962e7061","fd0f48e9-d102-4502-9d06-94f78405f07a","51e53e64-e6dd-4fd6-8062-5d4455f0a1cb","f4ec684b-e5f1-44e9-a8a7-aca27f7ca6f3","177fa228-9099-4dd5-8969-c67f9c78bd0c","d5ab0d7a-0123-473f-84d4-81740defb9b4","548f6d36-c509-4b79-9c4b-59f227c7f550","c0901673-4f5e-4e51-ad87-0217f2d33a0c","0787f8d6-dc99-47c6-946e-2b008814bebc","0ade5216-1103-486a-aff0-a709ff825b02","a2c4dd21-985c-497d-b421-c2d8a9ec0eeb","908a498c-f7e3-4668-8afd-f179a027b4d9","4945e5c3-033d-467c-a8b3-b1479c1fdf0a","854f4584-28d5-43bd-938e-88d0957c78e3","6a6574f8-d63d-4fed-99c5-38f3df0364ac","baa9bf33-a11f-4da5-80eb-7930448aaad1","586d7983-2a0e-47ee-b80c-2800696255da","553879bb-db6e-448d-8adc-68864d7be6cf","cf1ae05a-dc05-49ed-934b-adf97088cd5c","8cec23d1-4808-4ca8-9562-c98a44fa659c","918008b0-231b-4552-b752-e1f3dc35cbfc","24f98f49-407b-4f0c-b90b-7cb436c0063d","5625b2fb-6c82-4130-b336-0ec9a19d28ef","be5d776a-0cae-4ad0-b823-fc7c1371aca9","951d4753-cc76-4e10-9427-bc1517d34a8c","e7f7db5d-3e80-4afb-a4a8-4863c5302031","14b6937e-c536-48c7-95f8-b71b569ebc4d","ed276d45-3e91-40f4-b3f7-559061948489","0001a0d6-5549-4fc5-955f-57c356d6e87e","31a25d19-9261-43ad-b43e-a31d39f64545","7f5ff12b-b543-473c-9e05-bfba5d7dabff","69fd45e6-5797-4294-8c16-f0ba0a91ad5c","01ffb8be-f877-42b4-ba13-92ad393a7e6c","060867a6-c2c6-4a7c-a282-403e4081d6e4","bc0ea075-4478-4d00-b9d9-1ae358fda6a5","e8704a7f-e816-4458-ae8a-0f9bc9f144b5","bbb78d74-fe80-4da0-9585-a2ef20ab4d1a","e6582267-a054-41b3-80ab-fb860956d3c5","91edf54b-8f96-4f4f-a127-f0b6435a56eb","a2a7b7e4-7286-4510-8576-cc45b70de00a","baeff097-97e3-467f-ba44-32700380ec05","530ff059-bf5c-4dea-9b35-4eb5625f1e2a","ed84e22f-1785-4a57-9c8b-ac92bbe43bc6"],"query2":{"filter":{"operator":"and"},"aggregations":[{"property":"title","aggregator":"count"}]},"space_id":"e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4"},"role":"reader"}},"notion_user":{},"collection_query":{},"signed_urls":{"2be47971-8f34-4d61-be6b-e52186222b23":"https://file.notion.so/f/s/e2ea857c-e35e-4e95-80e7-134da4810a4f/Untitled.png?id=2be47971-8f34-4d61-be6b-e52186222b23&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=GZwHdz5Z80Dr81i8Q5LLVdChzLx4930NKEw_qvBQKKE","12e692f3-341a-4ff8-a5b0-5772cf40fc2d":"https://file.notion.so/f/s/28e39de8-cdfa-4268-9101-52b9b8da85fb/Untitled.png?id=12e692f3-341a-4ff8-a5b0-5772cf40fc2d&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=rhoIngKaf0H7TijHzoMEOkHNuNieYr_2d0ZXHjolphQ","e66f4254-048a-445e-8721-53bfc17dc7f5":"https://file.notion.so/f/s/27db6022-e584-4dbe-8cf8-06cc84109e28/Untitled.png?id=e66f4254-048a-445e-8721-53bfc17dc7f5&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=AAKbqd59IxBe_TADug5znNn_wMPWmE57wuMmNwh2PBY","0144989b-b6ee-4558-8cf4-f0e5be7bfe91":"https://file.notion.so/f/s/3bfbcc56-e3fb-4ced-b2b1-1d2b28c06d68/Untitled.png?id=0144989b-b6ee-4558-8cf4-f0e5be7bfe91&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=s8xch-f0Ug-b3D1HHJHXSNynXrxiW1dpl8XiwuzXT_k","f27b8f0c-97d1-4ede-a9e6-6b84d67bd33f":"https://file.notion.so/f/s/66470aa1-ca10-4971-9c27-583323d07a39/Untitled.png?id=f27b8f0c-97d1-4ede-a9e6-6b84d67bd33f&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=eY5z0qn5V4huBgDHmtP60Eo77cMzDTohjJt3I6TLZ4A","4f97c576-a7c9-4239-b291-87a205470098":"https://file.notion.so/f/s/590a4762-9e66-4cf0-887d-57bce3af9861/Untitled.png?id=4f97c576-a7c9-4239-b291-87a205470098&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=R0yEmLkSuCEVGrcRfXpaJfoRltFd3NpYO23qRlzjWJI","4c23debe-1089-43df-92cc-e5bf688b0795":"https://file.notion.so/f/s/7351ebc1-cfc8-4151-ba15-364261d1b233/Untitled.png?id=4c23debe-1089-43df-92cc-e5bf688b0795&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=dSiUIze-PuAmMFjRdRNpP-SDoJT-OoIeZGqIIuquGLk","691f11ea-11f7-4309-ab25-939306d7871e":"https://file.notion.so/f/s/e3e91a81-2871-4d11-a1b8-65d6a3fcb4b5/Untitled.png?id=691f11ea-11f7-4309-ab25-939306d7871e&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=aXQF9j-nYynDY94p8RIQA6ks8sp7bmOhkMi76TPSeAE","27f6dfc9-6730-4cfe-8f19-822c64a780a4":"https://file.notion.so/f/s/c2c24577-e41a-44b5-bc28-54d61b6d6d43/Untitled.png?id=27f6dfc9-6730-4cfe-8f19-822c64a780a4&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=25Svm32qXtIMIyJkhfJVxtvq28EpoaW273yxGGyO12o","dcac6f7b-4125-4cdc-8ffb-cf00da99094b":"https://file.notion.so/f/s/dff9c13f-5f05-4148-a7da-957ea5b5473d/Untitled.png?id=dcac6f7b-4125-4cdc-8ffb-cf00da99094b&table=block&spaceId=e7bb21a8-53c5-4141-a2a6-9c3a436ecfe4&expirationTimestamp=1693584000000&signature=RWgdETCn1dRKRKLbePiLYfWO7ktCEaptntG9dupZYAY"}},"emailHash":"c8089598dc27a7944c95a8ed30867b78"},"__N_SSG":true}