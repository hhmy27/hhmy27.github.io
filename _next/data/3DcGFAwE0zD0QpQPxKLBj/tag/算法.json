{"pageProps":{"tags":{"Vim":1,"算法":6,"Go":4,"计算机网络":4,"数据库":1},"posts":[{"id":"553879bb-db6e-448d-8adc-68864d7be6cf","date":{"start_date":"2023-02-06"},"type":["Post"],"slug":"disjoint-set","tags":["算法"],"summary":"朴素并查集、带权并查集、种类并查集","title":"并查集汇总","status":["Published"],"createdTime":"Sun Feb 05 2023 04:42:38 GMT+0000 (Coordinated Universal Time)","fullWidth":false,"pageIcon":null,"pageCover":null},{"id":"cf1ae05a-dc05-49ed-934b-adf97088cd5c","date":{"start_date":"2023-01-29"},"type":["Post"],"slug":"short-path-problem","tags":["算法"],"summary":"五种求最短路径的基本算法","title":"求最短路径的基本算法","status":["Published"],"createdTime":"Sun Jan 29 2023 04:58:44 GMT+0000 (Coordinated Universal Time)","fullWidth":false,"pageIcon":null,"pageCover":null},{"id":"31a25d19-9261-43ad-b43e-a31d39f64545","date":{"start_date":"2022-11-17"},"type":["Post"],"slug":"peak-finding-leetcode","tags":["算法"],"summary":"巧妙利用二分解题","title":"leetcode 上的 peak finding 问题汇总","status":["Published"],"createdTime":"Fri Dec 16 2022 08:30:47 GMT+0000 (Coordinated Universal Time)","fullWidth":false,"pageIcon":null,"pageCover":null},{"id":"7f5ff12b-b543-473c-9e05-bfba5d7dabff","date":{"start_date":"2022-11-16"},"type":["Post"],"slug":"time-complex","tags":["算法"],"summary":"等比数列通项公式","title":"三道计算时间复杂度的题目","status":["Published"],"createdTime":"Fri Dec 16 2022 08:30:50 GMT+0000 (Coordinated Universal Time)","fullWidth":true,"pageIcon":null,"pageCover":null},{"id":"69fd45e6-5797-4294-8c16-f0ba0a91ad5c","date":{"start_date":"2022-11-16"},"type":["Post"],"slug":"reverse-list-search","tags":["算法"],"summary":"如何在旋转数组中找到target","title":"旋转数组搜索专题","status":["Published"],"createdTime":"Fri Dec 16 2022 08:30:47 GMT+0000 (Coordinated Universal Time)","fullWidth":false,"pageIcon":null,"pageCover":null},{"id":"01ffb8be-f877-42b4-ba13-92ad393a7e6c","date":{"start_date":"2022-11-16"},"type":["Post"],"slug":"peak-finding","tags":["算法"],"summary":"如何高效找到峰值？Divide & Conquer","title":"peak finding 问题","status":["Published"],"createdTime":"Fri Dec 16 2022 08:30:47 GMT+0000 (Coordinated Universal Time)","fullWidth":true,"pageIcon":null,"pageCover":null}],"currentTag":"算法"},"__N_SSG":true}